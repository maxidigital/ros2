/*
 *
 * Copyright (C) German Aerospace Center e.V. (https://www.dlr.de)
 * Institute of Transportation Systems. (https://www.dlr.de/ts/)
 *
 * 
 * Eclipse ADORe, Automated Driving Open Research https://eclipse.org/adore
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 * 
 * SPDX-License-Identifier: EPL-2.0
 * 
 *
 * 
 * File automatically generated with DLR Wind v2
 * 
 * This file belongs to the DLR Wind project de.dlr.ts.v2x:cpm_v2_23:1.0
 * 
 * Module: CPM_PDU_Descriptions {itu-t(0) identified-organization(4) etsi(0) itsDomain(5) 
 *         wg1(1) ts(103324) cpm(1) major-version-1(1) minor-version-1(1)}
 * 
 * For support contact v2x-ts@dlr.de
 * 
 *
 */
#include <cpm_v2_23_cpm_pdu_descriptions_wer_decoder.h>


/**
 *
 */
namespace wind
{
    namespace decoder_cpm_v2_23_cpm_pdu_descriptions
    {        
        
        #if WIND_ROS_VERSION == 1
          bool WerDecoder::decode(cpm_v2_23_cpm_pdu_descriptions_msgs::CollectivePerceptionMessage* ros, const uint8_t *buffer)
        #else
          bool WerDecoder::decode(cpm_v2_23_cpm_pdu_descriptions_msgs::msg::CollectivePerceptionMessage* ros, const uint8_t *buffer)
        #endif
        {
            const uint8_t *start = buffer;
            int64_t __aux64__;
	
    // CollectivePerceptionMessage  SEQUENCE
        //  its_header ItsPduHeader     
        //  payload    CpmPayload       
    
    // Field name: its_header
        // ItsPduHeader  SEQUENCE
            //  protocolVersion OrdinalNumber1B     
            //  messageId       MessageId           
            //  stationId       StationId           
        
        // Field name: protocol_version
        // Integer
        // UINT8  min(0) max(255) span(256) datatype(UInt8)
        uint8_t* _tmp_1 = (uint8_t*) buffer++;
        __aux64__ = *_tmp_1;
        ros->its_header.protocol_version.value = __aux64__;
        
        if(debug) {
            logger->print() << "|" << tools::brown("000000") << "| " << tools::getTypeName(ros->its_header.protocol_version.value) << 
                         " its_header.protocol_version.value: " << static_cast<int>(ros->its_header.protocol_version.value);
        }
        
        // ******************* MIN validator *******************
        if(VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->error() << "Error: Value in 'its_header.protocol_version.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
            return false;
        }
        // ******************* MAX validator *******************
        if(VALIDATORS_ENABLED && __aux64__ > 255) {
            logger->error() << "Error: Value in 'its_header.protocol_version.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
            return false;
        }
        
        // Field name: message_id
        // Integer
        // UINT8  min(0) max(255) span(256) datatype(UInt8)
        uint8_t* _tmp_2 = (uint8_t*) buffer++;
        __aux64__ = *_tmp_2;
        ros->its_header.message_id.value = __aux64__;
        
        if(debug) {
            logger->print() << "|" << tools::brown("000001") << "| " << tools::getTypeName(ros->its_header.message_id.value) << 
                         " its_header.message_id.value: " << static_cast<int>(ros->its_header.message_id.value);
        }
        
        // ******************* MIN validator *******************
        if(VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->error() << "Error: Value in 'its_header.message_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
            return false;
        }
        // ******************* MAX validator *******************
        if(VALIDATORS_ENABLED && __aux64__ > 255) {
            logger->error() << "Error: Value in 'its_header.message_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
            return false;
        }
        
        // Field name: station_id
        // Integer
        // UINT32  min(0) max(4294967295) span(4294967296) datatype(UInt32)
        uint32_t* _tmp_3 = (uint32_t*) buffer; buffer += 4;
        __aux64__ = *_tmp_3;
        ros->its_header.station_id.value = __aux64__;
        
        if(debug) {
            logger->print() << "|" << tools::brown("000002") << "| " << tools::getTypeName(ros->its_header.station_id.value) << 
                         " its_header.station_id.value: " << ros->its_header.station_id.value;
        }
        
        // ******************* MIN validator *******************
        if(VALIDATORS_ENABLED && __aux64__ < 0) {
            logger->error() << "Error: Value in 'its_header.station_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
            return false;
        }
        // ******************* MAX validator *******************
        if(VALIDATORS_ENABLED && __aux64__ > 4294967295) {
            logger->error() << "Error: Value in 'its_header.station_id.value' " << (__aux64__) << " exceeds max allowable (4294967295); message dropped.";
            return false;
        }
    
    // Field name: payload
        // CpmPayload  SEQUENCE
            //  managementContainer ManagementContainer                
            //  cpmContainers       ConstraintWrappedCpmContainers     
            //  ...
        uint8_t* _ext_flag_1 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.
        
        if(debug) {
            logger->print() << "|" << tools::brown("000003") << "| Reading ext flag from ros->payload.: " << int(*_ext_flag_1);
        }
        
        
        // Field name: management_container
            // ManagementContainer  SEQUENCE
                //  referenceTime     TimestampIts                
                //  referencePosition ReferencePosition           
                //  segmentationInfo  MessageSegmentationInfo   OPTIONAL  
                //  messageRateRange  MessageRateRange          OPTIONAL  
                //  ...
            uint8_t* _ext_flag_2 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.management_container.
            
            if(debug) {
                logger->print() << "|" << tools::brown("000004") << "| Reading ext flag from ros->payload.management_container.: " << int(*_ext_flag_2);
            }
            
            if(*(buffer++)) { 
                its_container_v3_etsi_its_cdd_msgs::msg::MessageSegmentationInfo _tmp_4;
                ros->payload.management_container.segmentation_info.push_back(_tmp_4);
            
                if(debug)
                    logger->print() << "|" << tools::brown("000005") << "| ros->payload.management_container.segmentation_info " << tools::green("present");
            }
            if(*(buffer++)) { 
                cpm_v2_23_cpm_pdu_descriptions_msgs::msg::MessageRateRange _tmp_5;
                ros->payload.management_container.message_rate_range.push_back(_tmp_5);
            
                if(debug)
                    logger->print() << "|" << tools::brown("000006") << "| ros->payload.management_container.message_rate_range " << tools::green("present");
            }
            
            // Field name: reference_time
            // Real
            // Double
            // DOUBLE  min(0) max(4398046511103) span(4398046511104) scaleDivisor(1000.0) dataType(Double)
            uint64_t* _tmp_6 = (uint64_t*)buffer; buffer += 8;
            ros->payload.management_container.reference_time.value = *_tmp_6;
            __aux64__ = ros->payload.management_container.reference_time.value;
            ros->payload.management_container.reference_time.value /= 1000.0;
            
            // ******************* MIN validator *******************
            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                logger->error() << "Error: Value in 'payload.management_container.reference_time.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                return false;
            }
            // ******************* MAX validator *******************
            if(VALIDATORS_ENABLED && __aux64__ > 4398046511103) {
                logger->error() << "Error: Value in 'payload.management_container.reference_time.value' " << (__aux64__) << " exceeds max allowable (4398046511103); message dropped.";
                return false;
            }
            
            if(debug) {
                logger->print() << "|" << tools::brown("000007") << "| " << tools::getTypeName(ros->payload.management_container.reference_time.value) << " payload.management_container.reference_time: " <<
                             ros->payload.management_container.reference_time.value << " (" << __aux64__ << ")";
            }
            
            // Field name: reference_position
                // ReferencePosition  SEQUENCE
                    //  latitude                  Latitude                 
                    //  longitude                 Longitude                
                    //  positionConfidenceEllipse PosConfidenceEllipse     
                    //  altitude                  Altitude                 
                
                // Field name: latitude
                // Real
                // Double
                // DOUBLE  min(-900000000) max(900000001) span(1800000002) scaleDivisor(1.0E7) dataType(Double)
                uint32_t* _tmp_7 = (uint32_t*) buffer; buffer += 4;
                ros->payload.management_container.reference_position.latitude.value = *_tmp_7;
                ros->payload.management_container.reference_position.latitude.value += -900000000;
                __aux64__ = ros->payload.management_container.reference_position.latitude.value;
                ros->payload.management_container.reference_position.latitude.value /= 1.0E7;
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < -900000000) {
                    logger->error() << "Error: Value in 'payload.management_container.reference_position.latitude.value' " << (__aux64__) << " is less than allowable (-900000000); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 900000001) {
                    logger->error() << "Error: Value in 'payload.management_container.reference_position.latitude.value' " << (__aux64__) << " exceeds max allowable (900000001); message dropped.";
                    return false;
                }
                
                if(debug) {
                    logger->print() << "|" << tools::brown("000008") << "| " << tools::getTypeName(ros->payload.management_container.reference_position.latitude.value) << " payload.management_container.reference_position.latitude: " <<
                                 ros->payload.management_container.reference_position.latitude.value << " (" << __aux64__ << ")";
                }
                
                // Field name: longitude
                // Real
                // Double
                // DOUBLE  min(-1800000000) max(1800000001) span(3600000002) scaleDivisor(1.0E7) dataType(Double)
                uint32_t* _tmp_8 = (uint32_t*) buffer; buffer += 4;
                ros->payload.management_container.reference_position.longitude.value = *_tmp_8;
                ros->payload.management_container.reference_position.longitude.value += -1800000000;
                __aux64__ = ros->payload.management_container.reference_position.longitude.value;
                ros->payload.management_container.reference_position.longitude.value /= 1.0E7;
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < -1800000000) {
                    logger->error() << "Error: Value in 'payload.management_container.reference_position.longitude.value' " << (__aux64__) << " is less than allowable (-1800000000); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 1800000001) {
                    logger->error() << "Error: Value in 'payload.management_container.reference_position.longitude.value' " << (__aux64__) << " exceeds max allowable (1800000001); message dropped.";
                    return false;
                }
                
                if(debug) {
                    logger->print() << "|" << tools::brown("000009") << "| " << tools::getTypeName(ros->payload.management_container.reference_position.longitude.value) << " payload.management_container.reference_position.longitude: " <<
                                 ros->payload.management_container.reference_position.longitude.value << " (" << __aux64__ << ")";
                }
                
                // Field name: position_confidence_ellipse
                    // PosConfidenceEllipse  SEQUENCE
                        //  semiMajorConfidence  SemiAxisLength     
                        //  semiMinorConfidence  SemiAxisLength     
                        //  semiMajorOrientation HeadingValue       
                    
                    // Field name: semi_major_confidence
                    // Real
                    // Float
                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                    uint16_t* _tmp_9 = (uint16_t*) buffer; buffer += 2;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value = *_tmp_9;
                    __aux64__ = ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value /= 100.0;
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->error() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                        logger->error() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                        return false;
                    }
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000010") << "| " << tools::getTypeName(ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value) << " payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence: " <<
                                     ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_confidence.value << " (" << __aux64__ << ")";
                    }
                    
                    // Field name: semi_minor_confidence
                    // Real
                    // Float
                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(100.0) dataType(Float)
                    uint16_t* _tmp_10 = (uint16_t*) buffer; buffer += 2;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value = *_tmp_10;
                    __aux64__ = ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value /= 100.0;
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->error() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                        logger->error() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                        return false;
                    }
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000011") << "| " << tools::getTypeName(ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value) << " payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence: " <<
                                     ros->payload.management_container.reference_position.position_confidence_ellipse.semi_minor_confidence.value << " (" << __aux64__ << ")";
                    }
                    
                    // Field name: semi_major_orientation
                    // Integer
                    // UINT16  min(0) max(3601) span(3602) datatype(UInt16)
                    uint16_t* _tmp_11 = (uint16_t*) buffer; buffer += 2;
                    __aux64__ = *_tmp_11;
                    ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value = __aux64__;
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000012") << "| " << tools::getTypeName(ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value) << 
                                     " payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value: " << ros->payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value;
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->error() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                        logger->error() << "Error: Value in 'payload.management_container.reference_position.position_confidence_ellipse.semi_major_orientation.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                        return false;
                    }
                
                // Field name: altitude
                    // Altitude  SEQUENCE
                        //  altitudeValue      AltitudeValue          
                        //  altitudeConfidence AltitudeConfidence     
                    
                    // Field name: altitude_value
                    // Real
                    // Float
                    // FLOAT  min(-100000) max(800001) span(900002) scaleDivisor(100.0) dataType(Float)
                    uint32_t* _tmp_12 = (uint32_t*) buffer; buffer += 4;
                    ros->payload.management_container.reference_position.altitude.altitude_value.value = *_tmp_12;
                    ros->payload.management_container.reference_position.altitude.altitude_value.value += -100000;
                    __aux64__ = ros->payload.management_container.reference_position.altitude.altitude_value.value;
                    ros->payload.management_container.reference_position.altitude.altitude_value.value /= 100.0;
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < -100000) {
                        logger->error() << "Error: Value in 'payload.management_container.reference_position.altitude.altitude_value.value' " << (__aux64__) << " is less than allowable (-100000); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 800001) {
                        logger->error() << "Error: Value in 'payload.management_container.reference_position.altitude.altitude_value.value' " << (__aux64__) << " exceeds max allowable (800001); message dropped.";
                        return false;
                    }
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000013") << "| " << tools::getTypeName(ros->payload.management_container.reference_position.altitude.altitude_value.value) << " payload.management_container.reference_position.altitude.altitude_value: " <<
                                     ros->payload.management_container.reference_position.altitude.altitude_value.value << " (" << __aux64__ << ")";
                    }
                    
                    // Field name: altitude_confidence
                    // Enumerated
                    // INT32  min(0) max(15) span(16) datatype(Int32)
                    uint8_t* _tmp_13 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_13;
                    __aux64__ += 0;
                    ros->payload.management_container.reference_position.altitude.altitude_confidence.value = __aux64__;
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->error() << "Error: Value in 'payload.management_container.reference_position.altitude.altitude_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 15) {
                        logger->error() << "Error: Value in 'payload.management_container.reference_position.altitude.altitude_confidence.value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                        return false;
                    }
                    
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000014") << "| " << tools::getTypeName(ros->payload.management_container.reference_position.altitude.altitude_confidence.value) << 
                                     " payload.management_container.reference_position.altitude.altitude_confidence.value: " << static_cast<int>(ros->payload.management_container.reference_position.altitude.altitude_confidence.value);
                    }
            
            if(ros->payload.management_container.segmentation_info.size() != 0) {
                // Field name: segmentation_info
                    // MessageSegmentationInfo  SEQUENCE
                        //  totalMsgNo CardinalNumber3b     
                        //  thisMsgNo  OrdinalNumber3b      
                    
                    // Field name: total_msg_no
                    // Integer
                    // UINT8  min(1) max(8) span(8) datatype(UInt8)
                    uint8_t* _tmp_14 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_14;
                    __aux64__ += 1;
                    ros->payload.management_container.segmentation_info[0].total_msg_no.value = __aux64__;
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000015") << "| " << tools::getTypeName(ros->payload.management_container.segmentation_info[0].total_msg_no.value) << 
                                     " payload.management_container.segmentation_info[0].total_msg_no.value: " << static_cast<int>(ros->payload.management_container.segmentation_info[0].total_msg_no.value);
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                        logger->error() << "Error: Value in 'payload.management_container.segmentation_info[0].total_msg_no.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 8) {
                        logger->error() << "Error: Value in 'payload.management_container.segmentation_info[0].total_msg_no.value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                        return false;
                    }
                    
                    // Field name: this_msg_no
                    // Integer
                    // UINT8  min(1) max(8) span(8) datatype(UInt8)
                    uint8_t* _tmp_15 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_15;
                    __aux64__ += 1;
                    ros->payload.management_container.segmentation_info[0].this_msg_no.value = __aux64__;
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000016") << "| " << tools::getTypeName(ros->payload.management_container.segmentation_info[0].this_msg_no.value) << 
                                     " payload.management_container.segmentation_info[0].this_msg_no.value: " << static_cast<int>(ros->payload.management_container.segmentation_info[0].this_msg_no.value);
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                        logger->error() << "Error: Value in 'payload.management_container.segmentation_info[0].this_msg_no.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 8) {
                        logger->error() << "Error: Value in 'payload.management_container.segmentation_info[0].this_msg_no.value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                        return false;
                    }
            }
            
            if(ros->payload.management_container.message_rate_range.size() != 0) {
                // Field name: message_rate_range
                    // MessageRateRange  SEQUENCE
                        //  messageRateMin MessageRateHz     
                        //  messageRateMax MessageRateHz     
                    
                    // Field name: message_rate_min
                        // MessageRateHz  SEQUENCE
                            //  mantissa   MessageRateHz_mantissa     
                            //  exponent   MessageRateHz_exponent     
                        
                        // Field name: mantissa
                        // Integer
                        // UINT8  min(1) max(100) span(100) datatype(UInt8)
                        uint8_t* _tmp_16 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_16;
                        __aux64__ += 1;
                        ros->payload.management_container.message_rate_range[0].message_rate_min.mantissa.value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000017") << "| " << tools::getTypeName(ros->payload.management_container.message_rate_range[0].message_rate_min.mantissa.value) << 
                                         " payload.management_container.message_rate_range[0].message_rate_min.mantissa.value: " << static_cast<int>(ros->payload.management_container.message_rate_range[0].message_rate_min.mantissa.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->error() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_min.mantissa.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 100) {
                            logger->error() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_min.mantissa.value' " << (__aux64__) << " exceeds max allowable (100); message dropped.";
                            return false;
                        }
                        
                        // Field name: exponent
                        // Integer
                        // INT8  min(-5) max(2) span(8) datatype(Int8)
                        uint8_t* _tmp_17 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_17;
                        __aux64__ += -5;
                        ros->payload.management_container.message_rate_range[0].message_rate_min.exponent.value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000018") << "| " << tools::getTypeName(ros->payload.management_container.message_rate_range[0].message_rate_min.exponent.value) << 
                                         " payload.management_container.message_rate_range[0].message_rate_min.exponent.value: " << static_cast<int>(ros->payload.management_container.message_rate_range[0].message_rate_min.exponent.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < -5) {
                            logger->error() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_min.exponent.value' " << (__aux64__) << " is less than allowable (-5); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 2) {
                            logger->error() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_min.exponent.value' " << (__aux64__) << " exceeds max allowable (2); message dropped.";
                            return false;
                        }
                    
                    // Field name: message_rate_max
                        // MessageRateHz  SEQUENCE
                            //  mantissa   MessageRateHz_mantissa     
                            //  exponent   MessageRateHz_exponent     
                        
                        // Field name: mantissa
                        // Integer
                        // UINT8  min(1) max(100) span(100) datatype(UInt8)
                        uint8_t* _tmp_18 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_18;
                        __aux64__ += 1;
                        ros->payload.management_container.message_rate_range[0].message_rate_max.mantissa.value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000019") << "| " << tools::getTypeName(ros->payload.management_container.message_rate_range[0].message_rate_max.mantissa.value) << 
                                         " payload.management_container.message_rate_range[0].message_rate_max.mantissa.value: " << static_cast<int>(ros->payload.management_container.message_rate_range[0].message_rate_max.mantissa.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->error() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_max.mantissa.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 100) {
                            logger->error() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_max.mantissa.value' " << (__aux64__) << " exceeds max allowable (100); message dropped.";
                            return false;
                        }
                        
                        // Field name: exponent
                        // Integer
                        // INT8  min(-5) max(2) span(8) datatype(Int8)
                        uint8_t* _tmp_19 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_19;
                        __aux64__ += -5;
                        ros->payload.management_container.message_rate_range[0].message_rate_max.exponent.value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000020") << "| " << tools::getTypeName(ros->payload.management_container.message_rate_range[0].message_rate_max.exponent.value) << 
                                         " payload.management_container.message_rate_range[0].message_rate_max.exponent.value: " << static_cast<int>(ros->payload.management_container.message_rate_range[0].message_rate_max.exponent.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < -5) {
                            logger->error() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_max.exponent.value' " << (__aux64__) << " is less than allowable (-5); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 2) {
                            logger->error() << "Error: Value in 'payload.management_container.message_rate_range[0].message_rate_max.exponent.value' " << (__aux64__) << " exceeds max allowable (2); message dropped.";
                            return false;
                        }
            }
            if(*_ext_flag_2) { // from ros->payload.management_container. 
                uint8_t* _tmp_20 = (uint8_t*) buffer++;  // number of extensions
                bool _array_1[*_tmp_20];
                
                if(debug)
                    logger->print() << "|" << tools::brown("000021") << "| Reading number of exts from ros->payload.management_container.: " << static_cast<unsigned int>(*_tmp_20);
                
                // Extensions bytemap
                for(int i = 0; i < *_tmp_20; i++)
                    _array_1[i] = (*buffer++) != 0;
                
                // Discarding unknown OpenType containers
                for(int i = 0; i < *_tmp_20; i++) {
                    uint16_t* _tmp_21 = (uint16_t*)buffer;  // OpenType length
                    buffer += 2;
                
                    if(debug) {
                    }
                
                    for(int i = 0; i < *_tmp_21; i++)
                        buffer++;
                }
                
            }
        
        // Field name: cpm_containers
        // SequenceOf
        // Data Type UInt8
        // SEQUENCE_OF  min(1) max(8) span(8)
        uint8_t* _ext_flag_10 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.
        
        if(debug) {
            logger->print() << "|" << tools::brown("000022") << "| Reading ext flag from ros->payload.cpm_containers.: " << int(*_ext_flag_10);
        }
        
        int16_t* _tmp_22 = (int16_t*)buffer;
        buffer += 2;
        __aux64__ = *_tmp_22;
        __aux64__ += 1;     // +min
        
        int _if__tmp_22 = __aux64__;
        
        if(debug) {
            logger->print() << "|" << tools::brown("000023") << "| SequenceOf ros->payload.cpm_containers. size: " << int(__aux64__);
        }
        
        // ******************* MIN validator *******************
        if(VALIDATORS_ENABLED && __aux64__ < 1) {
            logger->error() << "Error: Value in 'payload.cpm_containers.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
            return false;
        }
        // ******************* MAX validator *******************
        if(VALIDATORS_ENABLED && __aux64__ > 8) {
            logger->error() << "Error: Value in 'payload.cpm_containers.value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
            return false;
        }
        
        
        for(int a = 0; a < _if__tmp_22; a++) {
            cpm_v2_23_cpm_pdu_descriptions_msgs::msg::WrappedCpmContainer seqof_a;  // CHOICE
            ros->payload.cpm_containers.elements.push_back(seqof_a);
        
            // Choice
               // #0  originatingVehicleContainer   OriginatingVehicleContainer   
               // #1  originatingRsuContainer   OriginatingRsuContainer   
               // #2  sensorInformationContainer   SensorInformationContainer   
               // #3  perceptionRegionContainer   PerceptionRegionContainer   
               // #4  perceivedObjectContainer   PerceivedObjectContainer   
            uint8_t _choice_1 = *(buffer++);
            
            if(_choice_1 == 0) {
                cpm_v2_23_cpm_originatingstationcontainers_msgs::msg::OriginatingVehicleContainer _tmp_23;
                ros->payload.cpm_containers.elements[a].originating_vehicle_container.push_back(_tmp_23);
            
                    // OriginatingVehicleContainer  SEQUENCE
                        //  orientationAngle Wgs84Angle         
                        //  pitchAngle       CartesianAngle   OPTIONAL  
                        //  rollAngle        CartesianAngle   OPTIONAL  
                        //  trailerDataSet   TrailerDataSet   OPTIONAL  
                        //  ...
                    uint8_t* _ext_flag_12 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000024") << "| Reading ext flag from ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].: " << int(*_ext_flag_12);
                    }
                    
                    if(*(buffer++)) { 
                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngle _tmp_24;
                        ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].pitch_angle.push_back(_tmp_24);
                    
                        if(debug)
                            logger->print() << "|" << tools::brown("000025") << "| ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].pitch_angle " << tools::green("present");
                    }
                    if(*(buffer++)) { 
                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngle _tmp_25;
                        ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].roll_angle.push_back(_tmp_25);
                    
                        if(debug)
                            logger->print() << "|" << tools::brown("000026") << "| ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].roll_angle " << tools::green("present");
                    }
                    if(*(buffer++)) { 
                        cpm_v2_23_cpm_originatingstationcontainers_msgs::msg::TrailerDataSet _tmp_26;
                        ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set.push_back(_tmp_26);
                    
                        if(debug)
                            logger->print() << "|" << tools::brown("000027") << "| ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set " << tools::green("present");
                    }
                    
                    // Field name: orientation_angle
                        // Wgs84Angle  SEQUENCE
                            //  value      Wgs84AngleValue          
                            //  confidence Wgs84AngleConfidence     
                        
                        // Field name: value
                        // Real
                        // Float
                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                        uint16_t* _tmp_27 = (uint16_t*) buffer; buffer += 2;
                        ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].orientation_angle.value.value = *_tmp_27;
                        __aux64__ = ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].orientation_angle.value.value;
                        ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].orientation_angle.value.value /= 10.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].orientation_angle.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].orientation_angle.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000028") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].orientation_angle.value.value) << " payload.cpm_containers.elements[a].originating_vehicle_container[0].orientation_angle.value: " <<
                                         ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].orientation_angle.value.value << " (" << __aux64__ << ")";
                        }
                        
                        // Field name: confidence
                        // Real
                        // Float
                        // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                        uint8_t* _tmp_28 = (uint8_t*) buffer++;
                        ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].orientation_angle.confidence.value = *_tmp_28;
                        ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].orientation_angle.confidence.value += 1;
                        __aux64__ = ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].orientation_angle.confidence.value;
                        ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].orientation_angle.confidence.value /= 10.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].orientation_angle.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 127) {
                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].orientation_angle.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000029") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].orientation_angle.confidence.value) << " payload.cpm_containers.elements[a].originating_vehicle_container[0].orientation_angle.confidence: " <<
                                         ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].orientation_angle.confidence.value << " (" << __aux64__ << ")";
                        }
                    
                    if(ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].pitch_angle.size() != 0) {
                        // Field name: pitch_angle
                            // CartesianAngle  SEQUENCE
                                //  value      CartesianAngleValue     
                                //  confidence AngleConfidence         
                            
                            // Field name: value
                            // Real
                            // Float
                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                            uint16_t* _tmp_29 = (uint16_t*) buffer; buffer += 2;
                            ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].pitch_angle[0].value.value = *_tmp_29;
                            __aux64__ = ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].pitch_angle[0].value.value;
                            ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].pitch_angle[0].value.value /= 10.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].pitch_angle[0].value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].pitch_angle[0].value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000030") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].pitch_angle[0].value.value) << " payload.cpm_containers.elements[a].originating_vehicle_container[0].pitch_angle[0].value: " <<
                                             ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].pitch_angle[0].value.value << " (" << __aux64__ << ")";
                            }
                            
                            // Field name: confidence
                            // Real
                            // Float
                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                            uint8_t* _tmp_30 = (uint8_t*) buffer++;
                            ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].pitch_angle[0].confidence.value = *_tmp_30;
                            ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].pitch_angle[0].confidence.value += 1;
                            __aux64__ = ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].pitch_angle[0].confidence.value;
                            ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].pitch_angle[0].confidence.value /= 10.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].pitch_angle[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].pitch_angle[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000031") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].pitch_angle[0].confidence.value) << " payload.cpm_containers.elements[a].originating_vehicle_container[0].pitch_angle[0].confidence: " <<
                                             ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].pitch_angle[0].confidence.value << " (" << __aux64__ << ")";
                            }
                    }
                    
                    if(ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].roll_angle.size() != 0) {
                        // Field name: roll_angle
                            // CartesianAngle  SEQUENCE
                                //  value      CartesianAngleValue     
                                //  confidence AngleConfidence         
                            
                            // Field name: value
                            // Real
                            // Float
                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                            uint16_t* _tmp_31 = (uint16_t*) buffer; buffer += 2;
                            ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].roll_angle[0].value.value = *_tmp_31;
                            __aux64__ = ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].roll_angle[0].value.value;
                            ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].roll_angle[0].value.value /= 10.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].roll_angle[0].value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].roll_angle[0].value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000032") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].roll_angle[0].value.value) << " payload.cpm_containers.elements[a].originating_vehicle_container[0].roll_angle[0].value: " <<
                                             ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].roll_angle[0].value.value << " (" << __aux64__ << ")";
                            }
                            
                            // Field name: confidence
                            // Real
                            // Float
                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                            uint8_t* _tmp_32 = (uint8_t*) buffer++;
                            ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].roll_angle[0].confidence.value = *_tmp_32;
                            ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].roll_angle[0].confidence.value += 1;
                            __aux64__ = ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].roll_angle[0].confidence.value;
                            ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].roll_angle[0].confidence.value /= 10.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].roll_angle[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].roll_angle[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000033") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].roll_angle[0].confidence.value) << " payload.cpm_containers.elements[a].originating_vehicle_container[0].roll_angle[0].confidence: " <<
                                             ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].roll_angle[0].confidence.value << " (" << __aux64__ << ")";
                            }
                    }
                    
                    if(ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set.size() != 0) {
                        // Field name: trailer_data_set
                        // SequenceOf
                        // Data Type UInt8
                        // SEQUENCE_OF  min(1) max(8) span(8)
                        uint8_t* _ext_flag_19 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000034") << "| Reading ext flag from ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].: " << int(*_ext_flag_19);
                        }
                        
                        int16_t* _tmp_33 = (int16_t*)buffer;
                        buffer += 2;
                        __aux64__ = *_tmp_33;
                        __aux64__ += 1;     // +min
                        
                        int _if__tmp_33 = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000035") << "| SequenceOf ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0]. size: " << int(__aux64__);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 8) {
                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                            return false;
                        }
                        
                        
                        for(int b = 0; b < _if__tmp_33; b++) {
                            its_container_v3_etsi_its_cdd_msgs::msg::TrailerData seqof_b;  // SEQUENCE
                            ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements.push_back(seqof_b);
                        
                                // TrailerData  SEQUENCE
                                    //  refPointId       Identifier1B         
                                    //  hitchPointOffset StandardLength1B     
                                    //  frontOverhang    StandardLength1B   OPTIONAL  
                                    //  rearOverhang     StandardLength1B   OPTIONAL  
                                    //  trailerWidth     VehicleWidth       OPTIONAL  
                                    //  hitchAngle       CartesianAngle       
                                    //  ...
                                uint8_t* _ext_flag_20 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000036") << "| Reading ext flag from ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].: " << int(*_ext_flag_20);
                                }
                                
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::StandardLength1B _tmp_34;
                                    ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].front_overhang.push_back(_tmp_34);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000037") << "| ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].front_overhang " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::StandardLength1B _tmp_35;
                                    ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].rear_overhang.push_back(_tmp_35);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000038") << "| ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].rear_overhang " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::VehicleWidth _tmp_36;
                                    ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].trailer_width.push_back(_tmp_36);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000039") << "| ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].trailer_width " << tools::green("present");
                                }
                                
                                // Field name: ref_point_id
                                // Integer
                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                uint8_t* _tmp_37 = (uint8_t*) buffer++;
                                __aux64__ = *_tmp_37;
                                ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].ref_point_id.value = __aux64__;
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000040") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].ref_point_id.value) << 
                                                 " payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].ref_point_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].ref_point_id.value);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].ref_point_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].ref_point_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                    return false;
                                }
                                
                                // Field name: hitch_point_offset
                                // Real
                                // Float
                                // FLOAT  min(0) max(255) span(256) scaleDivisor(10.0) dataType(Float)
                                uint8_t* _tmp_38 = (uint8_t*) buffer++;
                                ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_point_offset.value = *_tmp_38;
                                __aux64__ = ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_point_offset.value;
                                ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_point_offset.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_point_offset.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_point_offset.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000041") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_point_offset.value) << " payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_point_offset: " <<
                                                 ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_point_offset.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].front_overhang.size() != 0) {
                                    // Field name: front_overhang
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(255) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_39 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].front_overhang[0].value = *_tmp_39;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].front_overhang[0].value;
                                    ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].front_overhang[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].front_overhang[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].front_overhang[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000042") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].front_overhang[0].value) << " payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].front_overhang[0]: " <<
                                                     ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].front_overhang[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].rear_overhang.size() != 0) {
                                    // Field name: rear_overhang
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(255) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_40 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].rear_overhang[0].value = *_tmp_40;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].rear_overhang[0].value;
                                    ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].rear_overhang[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].rear_overhang[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].rear_overhang[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000043") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].rear_overhang[0].value) << " payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].rear_overhang[0]: " <<
                                                     ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].rear_overhang[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].trailer_width.size() != 0) {
                                    // Field name: trailer_width
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(62) span(62) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_41 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].trailer_width[0].value = *_tmp_41;
                                    ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].trailer_width[0].value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].trailer_width[0].value;
                                    ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].trailer_width[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].trailer_width[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 62) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].trailer_width[0].value' " << (__aux64__) << " exceeds max allowable (62); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000044") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].trailer_width[0].value) << " payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].trailer_width[0]: " <<
                                                     ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].trailer_width[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                // Field name: hitch_angle
                                    // CartesianAngle  SEQUENCE
                                        //  value      CartesianAngleValue     
                                        //  confidence AngleConfidence         
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_42 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_angle.value.value = *_tmp_42;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_angle.value.value;
                                    ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_angle.value.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_angle.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_angle.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000045") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_angle.value.value) << " payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_angle.value: " <<
                                                     ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_angle.value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_43 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_angle.confidence.value = *_tmp_43;
                                    ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_angle.confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_angle.confidence.value;
                                    ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_angle.confidence.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_angle.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_angle.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000046") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_angle.confidence.value) << " payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_angle.confidence: " <<
                                                     ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].hitch_angle.confidence.value << " (" << __aux64__ << ")";
                                    }
                                if(*_ext_flag_20) { // from ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b]. 
                                    uint8_t* _tmp_44 = (uint8_t*) buffer++;  // number of extensions
                                    bool _array_2[*_tmp_44];
                                    
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000047") << "| Reading number of exts from ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].trailer_data_set[0].elements[b].: " << static_cast<unsigned int>(*_tmp_44);
                                    
                                    // Extensions bytemap
                                    for(int i = 0; i < *_tmp_44; i++)
                                        _array_2[i] = (*buffer++) != 0;
                                    
                                    // Discarding unknown OpenType containers
                                    for(int i = 0; i < *_tmp_44; i++) {
                                        uint16_t* _tmp_45 = (uint16_t*)buffer;  // OpenType length
                                        buffer += 2;
                                    
                                        if(debug) {
                                        }
                                    
                                        for(int i = 0; i < *_tmp_45; i++)
                                            buffer++;
                                    }
                                    
                                }
                        }
                    }
                    if(*_ext_flag_12) { // from ros->payload.cpm_containers.elements[a].originating_vehicle_container[0]. 
                        uint8_t* _tmp_46 = (uint8_t*) buffer++;  // number of extensions
                        bool _array_3[*_tmp_46];
                        
                        if(debug)
                            logger->print() << "|" << tools::brown("000048") << "| Reading number of exts from ros->payload.cpm_containers.elements[a].originating_vehicle_container[0].: " << static_cast<unsigned int>(*_tmp_46);
                        
                        // Extensions bytemap
                        for(int i = 0; i < *_tmp_46; i++)
                            _array_3[i] = (*buffer++) != 0;
                        
                        // Discarding unknown OpenType containers
                        for(int i = 0; i < *_tmp_46; i++) {
                            uint16_t* _tmp_47 = (uint16_t*)buffer;  // OpenType length
                            buffer += 2;
                        
                            if(debug) {
                            }
                        
                            for(int i = 0; i < *_tmp_47; i++)
                                buffer++;
                        }
                        
                    }
            }
            else if(_choice_1 == 1)  // CHOICE WrappedCpmContainer  fieldName(originating_rsu_container)
            {
                cpm_v2_23_cpm_originatingstationcontainers_msgs::msg::OriginatingRsuContainer _tmp_48;
                ros->payload.cpm_containers.elements[a].originating_rsu_container.push_back(_tmp_48);
            
                    // OriginatingRsuContainer  SEQUENCE
                        //  mapReference MapReference   OPTIONAL  
                        //  ...
                    uint8_t* _ext_flag_27 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[a].originating_rsu_container[0].
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000049") << "| Reading ext flag from ros->payload.cpm_containers.elements[a].originating_rsu_container[0].: " << int(*_ext_flag_27);
                    }
                    
                    if(*(buffer++)) { 
                        its_container_v3_etsi_its_cdd_msgs::msg::MapReference _tmp_49;
                        ros->payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference.push_back(_tmp_49);
                    
                        if(debug)
                            logger->print() << "|" << tools::brown("000050") << "| ros->payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference " << tools::green("present");
                    }
                    
                    if(ros->payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference.size() != 0) {
                        // Field name: map_reference
                        // Choice
                           // #0  roadsegment   RoadSegmentReferenceId   
                           // #1  intersection   IntersectionReferenceId   
                        uint8_t _choice_2 = *(buffer++);
                        
                        if(_choice_2 == 0) {
                            its_container_v3_etsi_its_cdd_msgs::msg::RoadSegmentReferenceId _tmp_50;
                            ros->payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].roadsegment.push_back(_tmp_50);
                        
                                // RoadSegmentReferenceId  SEQUENCE
                                    //  region     Identifier2B   OPTIONAL  
                                    //  id         Identifier2B     
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::Identifier2B _tmp_51;
                                    ros->payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].roadsegment[0].region.push_back(_tmp_51);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000051") << "| ros->payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].roadsegment[0].region " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].roadsegment[0].region.size() != 0) {
                                    // Field name: region
                                    // Integer
                                    // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                    uint16_t* _tmp_52 = (uint16_t*) buffer; buffer += 2;
                                    __aux64__ = *_tmp_52;
                                    ros->payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000052") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value) << 
                                                     " payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value: " << ros->payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value;
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                        return false;
                                    }
                                }
                                
                                // Field name: id
                                // Integer
                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                uint16_t* _tmp_53 = (uint16_t*) buffer; buffer += 2;
                                __aux64__ = *_tmp_53;
                                ros->payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value = __aux64__;
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000053") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value) << 
                                                 " payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value: " << ros->payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value;
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                    return false;
                                }
                        }
                        else if(_choice_2 == 1)  // CHOICE MapReference  fieldName(intersection)
                        {
                            its_container_v3_etsi_its_cdd_msgs::msg::IntersectionReferenceId _tmp_54;
                            ros->payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].intersection.push_back(_tmp_54);
                        
                                // IntersectionReferenceId  SEQUENCE
                                    //  region     Identifier2B   OPTIONAL  
                                    //  id         Identifier2B     
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::Identifier2B _tmp_55;
                                    ros->payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].intersection[0].region.push_back(_tmp_55);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000054") << "| ros->payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].intersection[0].region " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].intersection[0].region.size() != 0) {
                                    // Field name: region
                                    // Integer
                                    // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                    uint16_t* _tmp_56 = (uint16_t*) buffer; buffer += 2;
                                    __aux64__ = *_tmp_56;
                                    ros->payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000055") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value) << 
                                                     " payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value: " << ros->payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value;
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                        return false;
                                    }
                                }
                                
                                // Field name: id
                                // Integer
                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                uint16_t* _tmp_57 = (uint16_t*) buffer; buffer += 2;
                                __aux64__ = *_tmp_57;
                                ros->payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].intersection[0].id.value = __aux64__;
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000056") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].intersection[0].id.value) << 
                                                 " payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].intersection[0].id.value: " << ros->payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].intersection[0].id.value;
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].intersection[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0].intersection[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                    return false;
                                }
                        }
                        else
                        {
                            logger->warning() << "Wrong option (" << static_cast<int>(_choice_2) << ") selected in CHOICE MapReference in 'payload.cpm_containers.elements[a].originating_rsu_container[0].map_reference[0]'; message dropped.";
                            return false;
                        }
                    }
                    if(*_ext_flag_27) { // from ros->payload.cpm_containers.elements[a].originating_rsu_container[0]. 
                        uint8_t* _tmp_58 = (uint8_t*) buffer++;  // number of extensions
                        bool _array_4[*_tmp_58];
                        
                        if(debug)
                            logger->print() << "|" << tools::brown("000057") << "| Reading number of exts from ros->payload.cpm_containers.elements[a].originating_rsu_container[0].: " << static_cast<unsigned int>(*_tmp_58);
                        
                        // Extensions bytemap
                        for(int i = 0; i < *_tmp_58; i++)
                            _array_4[i] = (*buffer++) != 0;
                        
                        // Discarding unknown OpenType containers
                        for(int i = 0; i < *_tmp_58; i++) {
                            uint16_t* _tmp_59 = (uint16_t*)buffer;  // OpenType length
                            buffer += 2;
                        
                            if(debug) {
                            }
                        
                            for(int i = 0; i < *_tmp_59; i++)
                                buffer++;
                        }
                        
                    }
            }
            else if(_choice_1 == 2)  // CHOICE WrappedCpmContainer  fieldName(sensor_information_container)
            {
                cpm_v2_23_cpm_sensorinformationcontainer_msgs::msg::SensorInformationContainer _tmp_60;
                ros->payload.cpm_containers.elements[a].sensor_information_container.push_back(_tmp_60);
            
                // SequenceOf
                // Data Type UInt8
                // SEQUENCE_OF  min(1) max(128) span(128)
                uint8_t* _ext_flag_29 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[a].sensor_information_container[0].
                
                if(debug) {
                    logger->print() << "|" << tools::brown("000058") << "| Reading ext flag from ros->payload.cpm_containers.elements[a].sensor_information_container[0].: " << int(*_ext_flag_29);
                }
                
                int16_t* _tmp_61 = (int16_t*)buffer;
                buffer += 2;
                __aux64__ = *_tmp_61;
                __aux64__ += 1;     // +min
                
                int _if__tmp_61 = __aux64__;
                
                if(debug) {
                    logger->print() << "|" << tools::brown("000059") << "| SequenceOf ros->payload.cpm_containers.elements[a].sensor_information_container[0]. size: " << int(__aux64__);
                }
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 128) {
                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].value' " << (__aux64__) << " exceeds max allowable (128); message dropped.";
                    return false;
                }
                
                
                for(int c = 0; c < _if__tmp_61; c++) {
                    cpm_v2_23_cpm_sensorinformationcontainer_msgs::msg::SensorInformation seqof_c;  // SEQUENCE
                    ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements.push_back(seqof_c);
                
                        // SensorInformation  SEQUENCE
                            //  sensorId                   Identifier1B                           
                            //  sensorType                 SensorType                             
                            //  perceptionRegionShape      Shape                                OPTIONAL  
                            //  perceptionRegionConfidence ConfidenceLevel                      OPTIONAL  
                            //  shadowingApplies           SensorInformation_shadowingApplies     
                            //  ...
                        uint8_t* _ext_flag_30 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000060") << "| Reading ext flag from ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].: " << int(*_ext_flag_30);
                        }
                        
                        if(*(buffer++)) { 
                            its_container_v3_etsi_its_cdd_msgs::msg::Shape _tmp_62;
                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape.push_back(_tmp_62);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000061") << "| ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v3_etsi_its_cdd_msgs::msg::ConfidenceLevel _tmp_63;
                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_confidence.push_back(_tmp_63);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000062") << "| ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_confidence " << tools::green("present");
                        }
                        
                        // Field name: sensor_id
                        // Integer
                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                        uint8_t* _tmp_64 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_64;
                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].sensor_id.value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000063") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].sensor_id.value) << 
                                         " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].sensor_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].sensor_id.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].sensor_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].sensor_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                            return false;
                        }
                        
                        // Field name: sensor_type
                        // Integer
                        // UINT8  min(0) max(31) span(32) datatype(UInt8)
                        uint8_t* _tmp_65 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_65;
                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].sensor_type.value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000064") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].sensor_type.value) << 
                                         " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].sensor_type.value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].sensor_type.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].sensor_type.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 31) {
                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].sensor_type.value' " << (__aux64__) << " exceeds max allowable (31); message dropped.";
                            return false;
                        }
                        
                        if(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape.size() != 0) {
                            // Field name: perception_region_shape
                            // Choice
                            uint8_t* _ext_flag_31 = (uint8_t*)buffer++; // ext flag
                            
                               // #0  rectangular   RectangularShape   
                               // #1  circular   CircularShape   
                               // #2  polygonal   PolygonalShape   
                               // #3  elliptical   EllipticalShape   
                               // #4  radial   RadialShape   
                               // #5  radialShapes   RadialShapes   
                            uint8_t _choice_3 = *(buffer++);
                            
                            if(*_ext_flag_31)
                                _choice_3 += 5 + 1; // Ext addition
                            
                            if(_choice_3 == 0) {
                                its_container_v3_etsi_its_cdd_msgs::msg::RectangularShape _tmp_66;
                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular.push_back(_tmp_66);
                            
                                    // RectangularShape  SEQUENCE
                                        //  centerPoint CartesianPosition3d   OPTIONAL  
                                        //  semiLength  StandardLength12b       
                                        //  semiBreadth StandardLength12b       
                                        //  orientation Wgs84AngleValue       OPTIONAL  
                                        //  height      StandardLength12b     OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_67;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point.push_back(_tmp_67);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000065") << "| ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::Wgs84AngleValue _tmp_68;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].orientation.push_back(_tmp_68);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000066") << "| ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].orientation " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_69;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].height.push_back(_tmp_69);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000067") << "| ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].height " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point.size() != 0) {
                                        // Field name: center_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_70;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate.push_back(_tmp_70);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000068") << "| ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_71 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value = *_tmp_71;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000069") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_72 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value = *_tmp_72;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000070") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_73 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value = *_tmp_73;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000071") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].center_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: semi_length
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_74 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].semi_length.value = *_tmp_74;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].semi_length.value;
                                    ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].semi_length.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].semi_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].semi_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000072") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].semi_length.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].semi_length: " <<
                                                     ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].semi_length.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: semi_breadth
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_75 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].semi_breadth.value = *_tmp_75;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].semi_breadth.value;
                                    ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].semi_breadth.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].semi_breadth.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].semi_breadth.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000073") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].semi_breadth.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].semi_breadth: " <<
                                                     ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].semi_breadth.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].orientation.size() != 0) {
                                        // Field name: orientation
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_76 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].orientation[0].value = *_tmp_76;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].orientation[0].value;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].orientation[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000074") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].orientation[0].value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].orientation[0]: " <<
                                                         ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].orientation[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].height.size() != 0) {
                                        // Field name: height
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_77 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].height[0].value = *_tmp_77;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].height[0].value;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].height[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000075") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].height[0].value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].height[0]: " <<
                                                         ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].rectangular[0].height[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_3 == 1)  // CHOICE Shape  fieldName(circular)
                            {
                                its_container_v3_etsi_its_cdd_msgs::msg::CircularShape _tmp_78;
                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular.push_back(_tmp_78);
                            
                                    // CircularShape  SEQUENCE
                                        //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                        //  radius              StandardLength12b       
                                        //  height              StandardLength12b     OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_79;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point.push_back(_tmp_79);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000076") << "| ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_80;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].height.push_back(_tmp_80);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000077") << "| ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].height " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point.size() != 0) {
                                        // Field name: shape_reference_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_81;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate.push_back(_tmp_81);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000078") << "| ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_82 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value = *_tmp_82;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000079") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_83 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value = *_tmp_83;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000080") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_84 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_84;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000081") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: radius
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_85 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].radius.value = *_tmp_85;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].radius.value;
                                    ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].radius.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].radius.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].radius.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000082") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].radius.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].radius: " <<
                                                     ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].radius.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].height.size() != 0) {
                                        // Field name: height
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_86 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].height[0].value = *_tmp_86;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].height[0].value;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].height[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000083") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].height[0].value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].height[0]: " <<
                                                         ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].circular[0].height[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_3 == 2)  // CHOICE Shape  fieldName(polygonal)
                            {
                                its_container_v3_etsi_its_cdd_msgs::msg::PolygonalShape _tmp_87;
                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal.push_back(_tmp_87);
                            
                                    // PolygonalShape  SEQUENCE
                                        //  shapeReferencePoint CartesianPosition3d             OPTIONAL  
                                        //  polygon             SequenceOfCartesianPosition3d     
                                        //  height              StandardLength12b               OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_88;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point.push_back(_tmp_88);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000084") << "| ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_89;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].height.push_back(_tmp_89);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000085") << "| ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].height " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point.size() != 0) {
                                        // Field name: shape_reference_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_90;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.push_back(_tmp_90);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000086") << "| ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_91 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value = *_tmp_91;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000087") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_92 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value = *_tmp_92;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000088") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_93 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_93;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000089") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: polygon
                                    // SequenceOf
                                    // Data Type UInt8
                                    // SEQUENCE_OF  min(1) max(16) span(16)
                                    uint8_t* _ext_flag_47 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000090") << "| Reading ext flag from ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.: " << int(*_ext_flag_47);
                                    }
                                    
                                    int16_t* _tmp_94 = (int16_t*)buffer;
                                    buffer += 2;
                                    __aux64__ = *_tmp_94;
                                    __aux64__ += 1;     // +min
                                    
                                    int _if__tmp_94 = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000091") << "| SequenceOf ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon. size: " << int(__aux64__);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                    for(int d = 0; d < _if__tmp_94; d++) {
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d seqof_d;  // SEQUENCE
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements.push_back(seqof_d);
                                    
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_95;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].z_coordinate.push_back(_tmp_95);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000092") << "| ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_96 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].x_coordinate.value = *_tmp_96;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000093") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].x_coordinate.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_97 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].y_coordinate.value = *_tmp_97;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000094") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].y_coordinate.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_98 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].z_coordinate[0].value = *_tmp_98;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000095") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].z_coordinate[0].value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].polygon.elements[d].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].height.size() != 0) {
                                        // Field name: height
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_99 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].height[0].value = *_tmp_99;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].height[0].value;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].height[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000096") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].height[0].value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].height[0]: " <<
                                                         ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].polygonal[0].height[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_3 == 3)  // CHOICE Shape  fieldName(elliptical)
                            {
                                its_container_v3_etsi_its_cdd_msgs::msg::EllipticalShape _tmp_100;
                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical.push_back(_tmp_100);
                            
                                    // EllipticalShape  SEQUENCE
                                        //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                        //  semiMajorAxisLength StandardLength12b       
                                        //  semiMinorAxisLength StandardLength12b       
                                        //  orientation         Wgs84AngleValue       OPTIONAL  
                                        //  height              StandardLength12b     OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_101;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point.push_back(_tmp_101);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000097") << "| ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::Wgs84AngleValue _tmp_102;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].orientation.push_back(_tmp_102);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000098") << "| ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].orientation " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_103;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].height.push_back(_tmp_103);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000099") << "| ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].height " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point.size() != 0) {
                                        // Field name: shape_reference_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_104;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.push_back(_tmp_104);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000100") << "| ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_105 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value = *_tmp_105;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000101") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_106 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value = *_tmp_106;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000102") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_107 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_107;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000103") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: semi_major_axis_length
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_108 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].semi_major_axis_length.value = *_tmp_108;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].semi_major_axis_length.value;
                                    ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].semi_major_axis_length.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000104") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].semi_major_axis_length.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].semi_major_axis_length: " <<
                                                     ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].semi_major_axis_length.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: semi_minor_axis_length
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_109 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value = *_tmp_109;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value;
                                    ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000105") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].semi_minor_axis_length: " <<
                                                     ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].semi_minor_axis_length.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].orientation.size() != 0) {
                                        // Field name: orientation
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_110 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].orientation[0].value = *_tmp_110;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].orientation[0].value;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].orientation[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000106") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].orientation[0].value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].orientation[0]: " <<
                                                         ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].orientation[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].height.size() != 0) {
                                        // Field name: height
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_111 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].height[0].value = *_tmp_111;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].height[0].value;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].height[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000107") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].height[0].value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].height[0]: " <<
                                                         ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].elliptical[0].height[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_3 == 4)  // CHOICE Shape  fieldName(radial)
                            {
                                its_container_v3_etsi_its_cdd_msgs::msg::RadialShape _tmp_112;
                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial.push_back(_tmp_112);
                            
                                    // RadialShape  SEQUENCE
                                        //  shapeReferencePoint                   CartesianPosition3d   OPTIONAL  
                                        //  range                                 StandardLength12b       
                                        //  stationaryHorizontalOpeningAngleStart Wgs84AngleValue         
                                        //  stationaryHorizontalOpeningAngleEnd   Wgs84AngleValue         
                                        //  verticalOpeningAngleStart             CartesianAngleValue   OPTIONAL  
                                        //  verticalOpeningAngleEnd               CartesianAngleValue   OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_113;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point.push_back(_tmp_113);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000108") << "| ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_114;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].vertical_opening_angle_start.push_back(_tmp_114);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000109") << "| ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].vertical_opening_angle_start " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_115;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].vertical_opening_angle_end.push_back(_tmp_115);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000110") << "| ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].vertical_opening_angle_end " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point.size() != 0) {
                                        // Field name: shape_reference_point
                                            // CartesianPosition3d  SEQUENCE
                                                //  xCoordinate CartesianCoordinate     
                                                //  yCoordinate CartesianCoordinate     
                                                //  zCoordinate CartesianCoordinate   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_116;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate.push_back(_tmp_116);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000111") << "| ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                            }
                                            
                                            // Field name: x_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_117 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value = *_tmp_117;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000112") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: y_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_118 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value = *_tmp_118;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000113") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate: " <<
                                                             ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                // Field name: z_coordinate
                                                // Real
                                                // Float
                                                // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_119 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_119;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000114") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                 ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                                    
                                    // Field name: range
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_120 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].range.value = *_tmp_120;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].range.value;
                                    ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].range.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000115") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].range.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].range: " <<
                                                     ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].range.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: stationary_horizontal_opening_angle_start
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_121 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value = *_tmp_121;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value;
                                    ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000116") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start: " <<
                                                     ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: stationary_horizontal_opening_angle_end
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_122 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value = *_tmp_122;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value;
                                    ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000117") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end: " <<
                                                     ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].stationary_horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].vertical_opening_angle_start.size() != 0) {
                                        // Field name: vertical_opening_angle_start
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_123 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value = *_tmp_123;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000118") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].vertical_opening_angle_start[0]: " <<
                                                         ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].vertical_opening_angle_end.size() != 0) {
                                        // Field name: vertical_opening_angle_end
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_124 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value = *_tmp_124;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000119") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].vertical_opening_angle_end[0]: " <<
                                                         ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial[0].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                            }
                            else if(_choice_3 == 5)  // CHOICE Shape  fieldName(radial_shapes)
                            {
                                its_container_v3_etsi_its_cdd_msgs::msg::RadialShapes _tmp_125;
                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes.push_back(_tmp_125);
                            
                                    // RadialShapes  SEQUENCE
                                        //  refPointId       Identifier1B                 
                                        //  xCoordinate      CartesianCoordinateSmall     
                                        //  yCoordinate      CartesianCoordinateSmall     
                                        //  zCoordinate      CartesianCoordinateSmall   OPTIONAL  
                                        //  radialShapesList RadialShapesList             
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinateSmall _tmp_126;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].z_coordinate.push_back(_tmp_126);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000120") << "| ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].z_coordinate " << tools::green("present");
                                    }
                                    
                                    // Field name: ref_point_id
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_127 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_127;
                                    ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].ref_point_id.value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000121") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].ref_point_id.value) << 
                                                     " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].ref_point_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].ref_point_id.value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].ref_point_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].ref_point_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                    
                                    // Field name: x_coordinate
                                    // Real
                                    // Float
                                    // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_128 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].x_coordinate.value = *_tmp_128;
                                    ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].x_coordinate.value += -3094;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].x_coordinate.value;
                                    ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].x_coordinate.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000122") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].x_coordinate.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].x_coordinate: " <<
                                                     ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].x_coordinate.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: y_coordinate
                                    // Real
                                    // Float
                                    // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_129 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].y_coordinate.value = *_tmp_129;
                                    ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].y_coordinate.value += -3094;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].y_coordinate.value;
                                    ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].y_coordinate.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000123") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].y_coordinate.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].y_coordinate: " <<
                                                     ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].y_coordinate.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].z_coordinate.size() != 0) {
                                        // Field name: z_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_130 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value = *_tmp_130;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value += -3094;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value;
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000124") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].z_coordinate[0]: " <<
                                                         ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                        }
                                    }
                                    
                                    // Field name: radial_shapes_list
                                    // SequenceOf
                                    // Data Type UInt8
                                    // SEQUENCE_OF  min(1) max(16) span(16)
                                    uint8_t* _ext_flag_70 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000125") << "| Reading ext flag from ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.: " << int(*_ext_flag_70);
                                    }
                                    
                                    int16_t* _tmp_131 = (int16_t*)buffer;
                                    buffer += 2;
                                    __aux64__ = *_tmp_131;
                                    __aux64__ += 1;     // +min
                                    
                                    int _if__tmp_131 = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000126") << "| SequenceOf ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list. size: " << int(__aux64__);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                    for(int e = 0; e < _if__tmp_131; e++) {
                                        its_container_v3_etsi_its_cdd_msgs::msg::RadialShapeDetails seqof_e;  // SEQUENCE
                                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements.push_back(seqof_e);
                                    
                                            // RadialShapeDetails  SEQUENCE
                                                //  range                       StandardLength12b       
                                                //  horizontalOpeningAngleStart CartesianAngleValue     
                                                //  horizontalOpeningAngleEnd   CartesianAngleValue     
                                                //  verticalOpeningAngleStart   CartesianAngleValue   OPTIONAL  
                                                //  verticalOpeningAngleEnd     CartesianAngleValue   OPTIONAL  
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_132;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].vertical_opening_angle_start.push_back(_tmp_132);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000127") << "| ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].vertical_opening_angle_start " << tools::green("present");
                                            }
                                            if(*(buffer++)) { 
                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_133;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].vertical_opening_angle_end.push_back(_tmp_133);
                                            
                                                if(debug)
                                                    logger->print() << "|" << tools::brown("000128") << "| ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].vertical_opening_angle_end " << tools::green("present");
                                            }
                                            
                                            // Field name: range
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_134 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].range.value = *_tmp_134;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].range.value;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].range.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000129") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].range.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].range: " <<
                                                             ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].range.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: horizontal_opening_angle_start
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_135 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].horizontal_opening_angle_start.value = *_tmp_135;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].horizontal_opening_angle_start.value;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].horizontal_opening_angle_start.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000130") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].horizontal_opening_angle_start: " <<
                                                             ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: horizontal_opening_angle_end
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_136 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].horizontal_opening_angle_end.value = *_tmp_136;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].horizontal_opening_angle_end.value;
                                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].horizontal_opening_angle_end.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000131") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].horizontal_opening_angle_end: " <<
                                                             ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].vertical_opening_angle_start.size() != 0) {
                                                // Field name: vertical_opening_angle_start
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                uint16_t* _tmp_137 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].vertical_opening_angle_start[0].value = *_tmp_137;
                                                __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].vertical_opening_angle_start[0].value;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].vertical_opening_angle_start[0].value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000132") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].vertical_opening_angle_start[0]: " <<
                                                                 ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                            
                                            if(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].vertical_opening_angle_end.size() != 0) {
                                                // Field name: vertical_opening_angle_end
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                uint16_t* _tmp_138 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].vertical_opening_angle_end[0].value = *_tmp_138;
                                                __aux64__ = ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].vertical_opening_angle_end[0].value;
                                                ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].vertical_opening_angle_end[0].value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000133") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].vertical_opening_angle_end[0]: " <<
                                                                 ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_shape[0].radial_shapes[0].radial_shapes_list.elements[e].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                                }
                                            }
                                    }
                            }
                            else
                            {
                                uint16_t* _tmp_139 = (uint16_t*)buffer;  // OpenType length
                                buffer += 2 + int(*_tmp_139);            // Ignoring opentype data
                            }
                        }
                        
                        if(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_confidence.size() != 0) {
                            // Field name: perception_region_confidence
                            // Integer
                            // UINT8  min(1) max(101) span(101) datatype(UInt8)
                            uint8_t* _tmp_140 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_140;
                            __aux64__ += 1;
                            ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_confidence[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000134") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_confidence[0].value) << 
                                             " payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_confidence[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_confidence[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_confidence[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 101) {
                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].perception_region_confidence[0].value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                                return false;
                            }
                        }
                        
                        // Field name: shadowing_applies
                        // Value
                        // Boolean
                        uint8_t* _tmp_141 = (uint8_t*)buffer;
                        buffer++;
                        ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].shadowing_applies.value = (*_tmp_141 == 1);
                        if(debug)
                            logger->print() << "|" << tools::brown("000135") << "| \033[37;1mbool  \033[0m ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].shadowing_applies.: " << (*_tmp_141);
                        if(*_ext_flag_30) { // from ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c]. 
                            uint8_t* _tmp_142 = (uint8_t*) buffer++;  // number of extensions
                            bool _array_5[*_tmp_142];
                            
                            if(debug)
                                logger->print() << "|" << tools::brown("000136") << "| Reading number of exts from ros->payload.cpm_containers.elements[a].sensor_information_container[0].elements[c].: " << static_cast<unsigned int>(*_tmp_142);
                            
                            // Extensions bytemap
                            for(int i = 0; i < *_tmp_142; i++)
                                _array_5[i] = (*buffer++) != 0;
                            
                            // Discarding unknown OpenType containers
                            for(int i = 0; i < *_tmp_142; i++) {
                                uint16_t* _tmp_143 = (uint16_t*)buffer;  // OpenType length
                                buffer += 2;
                            
                                if(debug) {
                                }
                            
                                for(int i = 0; i < *_tmp_143; i++)
                                    buffer++;
                            }
                            
                        }
                }
            }
            else if(_choice_1 == 3)  // CHOICE WrappedCpmContainer  fieldName(perception_region_container)
            {
                cpm_v2_23_cpm_perceptionregioncontainer_msgs::msg::PerceptionRegionContainer _tmp_144;
                ros->payload.cpm_containers.elements[a].perception_region_container.push_back(_tmp_144);
            
                // SequenceOf
                // Data Type UInt16
                // SEQUENCE_OF  min(1) max(256) span(256)
                uint8_t* _ext_flag_76 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[a].perception_region_container[0].
                
                if(debug) {
                    logger->print() << "|" << tools::brown("000137") << "| Reading ext flag from ros->payload.cpm_containers.elements[a].perception_region_container[0].: " << int(*_ext_flag_76);
                }
                
                int16_t* _tmp_145 = (int16_t*)buffer;
                buffer += 2;
                __aux64__ = *_tmp_145;
                __aux64__ += 1;     // +min
                
                int _if__tmp_145 = __aux64__;
                
                if(debug) {
                    logger->print() << "|" << tools::brown("000138") << "| SequenceOf ros->payload.cpm_containers.elements[a].perception_region_container[0]. size: " << int(__aux64__);
                }
                
                // ******************* MIN validator *******************
                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                    return false;
                }
                // ******************* MAX validator *******************
                if(VALIDATORS_ENABLED && __aux64__ > 256) {
                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                    return false;
                }
                
                
                for(int f = 0; f < _if__tmp_145; f++) {
                    cpm_v2_23_cpm_perceptionregioncontainer_msgs::msg::PerceptionRegion seqof_f;  // SEQUENCE
                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements.push_back(seqof_f);
                
                        // PerceptionRegion  SEQUENCE
                            //  measurementDeltaTime       DeltaTimeMilliSecondSigned            
                            //  perceptionRegionConfidence ConfidenceLevel                       
                            //  perceptionRegionShape      Shape                                 
                            //  shadowingApplies           PerceptionRegion_shadowingApplies     
                            //  sensorIdList               SequenceOfIdentifier1B              OPTIONAL  
                            //  numberOfPerceivedObjects   CardinalNumber1B                    OPTIONAL  
                            //  perceivedObjectIds         PerceivedObjectIds                  OPTIONAL  
                            //  ...
                        uint8_t* _ext_flag_77 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000139") << "| Reading ext flag from ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].: " << int(*_ext_flag_77);
                        }
                        
                        if(*(buffer++)) { 
                            its_container_v3_etsi_its_cdd_msgs::msg::SequenceOfIdentifier1B _tmp_146;
                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].sensor_id_list.push_back(_tmp_146);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000140") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].sensor_id_list " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            its_container_v3_etsi_its_cdd_msgs::msg::CardinalNumber1B _tmp_147;
                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].number_of_perceived_objects.push_back(_tmp_147);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000141") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].number_of_perceived_objects " << tools::green("present");
                        }
                        if(*(buffer++)) { 
                            cpm_v2_23_cpm_perceptionregioncontainer_msgs::msg::PerceivedObjectIds _tmp_148;
                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perceived_object_ids.push_back(_tmp_148);
                        
                            if(debug)
                                logger->print() << "|" << tools::brown("000142") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perceived_object_ids " << tools::green("present");
                        }
                        
                        // Field name: measurement_delta_time
                        // Real
                        // Float
                        // FLOAT  min(-2048) max(2047) span(4096) scaleDivisor(1000.0) dataType(Float)
                        uint16_t* _tmp_149 = (uint16_t*) buffer; buffer += 2;
                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].measurement_delta_time.value = *_tmp_149;
                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].measurement_delta_time.value += -2048;
                        __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].measurement_delta_time.value;
                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].measurement_delta_time.value /= 1000.0;
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < -2048) {
                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].measurement_delta_time.value' " << (__aux64__) << " is less than allowable (-2048); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 2047) {
                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].measurement_delta_time.value' " << (__aux64__) << " exceeds max allowable (2047); message dropped.";
                            return false;
                        }
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000143") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].measurement_delta_time.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].measurement_delta_time: " <<
                                         ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].measurement_delta_time.value << " (" << __aux64__ << ")";
                        }
                        
                        // Field name: perception_region_confidence
                        // Integer
                        // UINT8  min(1) max(101) span(101) datatype(UInt8)
                        uint8_t* _tmp_150 = (uint8_t*) buffer++;
                        __aux64__ = *_tmp_150;
                        __aux64__ += 1;
                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_confidence.value = __aux64__;
                        
                        if(debug) {
                            logger->print() << "|" << tools::brown("000144") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_confidence.value) << 
                                         " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_confidence.value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_confidence.value);
                        }
                        
                        // ******************* MIN validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                            return false;
                        }
                        // ******************* MAX validator *******************
                        if(VALIDATORS_ENABLED && __aux64__ > 101) {
                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_confidence.value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                            return false;
                        }
                        
                        // Field name: perception_region_shape
                        // Choice
                        uint8_t* _ext_flag_79 = (uint8_t*)buffer++; // ext flag
                        
                           // #0  rectangular   RectangularShape   
                           // #1  circular   CircularShape   
                           // #2  polygonal   PolygonalShape   
                           // #3  elliptical   EllipticalShape   
                           // #4  radial   RadialShape   
                           // #5  radialShapes   RadialShapes   
                        uint8_t _choice_4 = *(buffer++);
                        
                        if(*_ext_flag_79)
                            _choice_4 += 5 + 1; // Ext addition
                        
                        if(_choice_4 == 0) {
                            its_container_v3_etsi_its_cdd_msgs::msg::RectangularShape _tmp_151;
                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular.push_back(_tmp_151);
                        
                                // RectangularShape  SEQUENCE
                                    //  centerPoint CartesianPosition3d   OPTIONAL  
                                    //  semiLength  StandardLength12b       
                                    //  semiBreadth StandardLength12b       
                                    //  orientation Wgs84AngleValue       OPTIONAL  
                                    //  height      StandardLength12b     OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_152;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point.push_back(_tmp_152);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000145") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::Wgs84AngleValue _tmp_153;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].orientation.push_back(_tmp_153);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000146") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].orientation " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_154;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].height.push_back(_tmp_154);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000147") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].height " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point.size() != 0) {
                                    // Field name: center_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_155;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].z_coordinate.push_back(_tmp_155);
                                        
                                            if(debug)
                                                logger->print() << "|" << tools::brown("000148") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_156 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value = *_tmp_156;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000149") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_157 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value = *_tmp_157;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000150") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_158 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value = *_tmp_158;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000151") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].center_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: semi_length
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_159 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].semi_length.value = *_tmp_159;
                                __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].semi_length.value;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].semi_length.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].semi_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].semi_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000152") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].semi_length.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].semi_length: " <<
                                                 ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].semi_length.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: semi_breadth
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_160 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].semi_breadth.value = *_tmp_160;
                                __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].semi_breadth.value;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].semi_breadth.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].semi_breadth.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].semi_breadth.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000153") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].semi_breadth.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].semi_breadth: " <<
                                                 ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].semi_breadth.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].orientation.size() != 0) {
                                    // Field name: orientation
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_161 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].orientation[0].value = *_tmp_161;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].orientation[0].value;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].orientation[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000154") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].orientation[0].value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].orientation[0]: " <<
                                                     ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].orientation[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].height.size() != 0) {
                                    // Field name: height
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_162 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].height[0].value = *_tmp_162;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].height[0].value;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].height[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000155") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].height[0].value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].height[0]: " <<
                                                     ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.rectangular[0].height[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_4 == 1)  // CHOICE Shape  fieldName(circular)
                        {
                            its_container_v3_etsi_its_cdd_msgs::msg::CircularShape _tmp_163;
                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular.push_back(_tmp_163);
                        
                                // CircularShape  SEQUENCE
                                    //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                    //  radius              StandardLength12b       
                                    //  height              StandardLength12b     OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_164;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point.push_back(_tmp_164);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000156") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_165;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].height.push_back(_tmp_165);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000157") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].height " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point.size() != 0) {
                                    // Field name: shape_reference_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_166;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate.push_back(_tmp_166);
                                        
                                            if(debug)
                                                logger->print() << "|" << tools::brown("000158") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_167 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value = *_tmp_167;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000159") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_168 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value = *_tmp_168;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000160") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_169 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_169;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000161") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: radius
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_170 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].radius.value = *_tmp_170;
                                __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].radius.value;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].radius.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].radius.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].radius.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000162") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].radius.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].radius: " <<
                                                 ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].radius.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].height.size() != 0) {
                                    // Field name: height
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_171 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].height[0].value = *_tmp_171;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].height[0].value;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].height[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000163") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].height[0].value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].height[0]: " <<
                                                     ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.circular[0].height[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_4 == 2)  // CHOICE Shape  fieldName(polygonal)
                        {
                            its_container_v3_etsi_its_cdd_msgs::msg::PolygonalShape _tmp_172;
                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal.push_back(_tmp_172);
                        
                                // PolygonalShape  SEQUENCE
                                    //  shapeReferencePoint CartesianPosition3d             OPTIONAL  
                                    //  polygon             SequenceOfCartesianPosition3d     
                                    //  height              StandardLength12b               OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_173;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point.push_back(_tmp_173);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000164") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_174;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].height.push_back(_tmp_174);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000165") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].height " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point.size() != 0) {
                                    // Field name: shape_reference_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_175;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate.push_back(_tmp_175);
                                        
                                            if(debug)
                                                logger->print() << "|" << tools::brown("000166") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_176 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value = *_tmp_176;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000167") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_177 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value = *_tmp_177;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000168") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_178 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_178;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000169") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: polygon
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(16) span(16)
                                uint8_t* _ext_flag_95 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000170") << "| Reading ext flag from ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.: " << int(*_ext_flag_95);
                                }
                                
                                int16_t* _tmp_179 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_179;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_179 = __aux64__;
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000171") << "| SequenceOf ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon. size: " << int(__aux64__);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int g = 0; g < _if__tmp_179; g++) {
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d seqof_g;  // SEQUENCE
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements.push_back(seqof_g);
                                
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_180;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].z_coordinate.push_back(_tmp_180);
                                        
                                            if(debug)
                                                logger->print() << "|" << tools::brown("000172") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_181 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].x_coordinate.value = *_tmp_181;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000173") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].x_coordinate.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_182 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].y_coordinate.value = *_tmp_182;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000174") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].y_coordinate.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_183 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].z_coordinate[0].value = *_tmp_183;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000175") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].z_coordinate[0].value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].polygon.elements[g].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].height.size() != 0) {
                                    // Field name: height
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_184 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].height[0].value = *_tmp_184;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].height[0].value;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].height[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000176") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].height[0].value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].height[0]: " <<
                                                     ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.polygonal[0].height[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_4 == 3)  // CHOICE Shape  fieldName(elliptical)
                        {
                            its_container_v3_etsi_its_cdd_msgs::msg::EllipticalShape _tmp_185;
                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical.push_back(_tmp_185);
                        
                                // EllipticalShape  SEQUENCE
                                    //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                    //  semiMajorAxisLength StandardLength12b       
                                    //  semiMinorAxisLength StandardLength12b       
                                    //  orientation         Wgs84AngleValue       OPTIONAL  
                                    //  height              StandardLength12b     OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_186;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point.push_back(_tmp_186);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000177") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::Wgs84AngleValue _tmp_187;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].orientation.push_back(_tmp_187);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000178") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].orientation " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_188;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].height.push_back(_tmp_188);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000179") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].height " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point.size() != 0) {
                                    // Field name: shape_reference_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_189;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate.push_back(_tmp_189);
                                        
                                            if(debug)
                                                logger->print() << "|" << tools::brown("000180") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_190 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value = *_tmp_190;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000181") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_191 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value = *_tmp_191;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000182") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_192 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_192;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000183") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: semi_major_axis_length
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_193 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].semi_major_axis_length.value = *_tmp_193;
                                __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].semi_major_axis_length.value;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].semi_major_axis_length.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000184") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].semi_major_axis_length.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].semi_major_axis_length: " <<
                                                 ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].semi_major_axis_length.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: semi_minor_axis_length
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_194 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].semi_minor_axis_length.value = *_tmp_194;
                                __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].semi_minor_axis_length.value;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].semi_minor_axis_length.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000185") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].semi_minor_axis_length.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].semi_minor_axis_length: " <<
                                                 ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].semi_minor_axis_length.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].orientation.size() != 0) {
                                    // Field name: orientation
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_195 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].orientation[0].value = *_tmp_195;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].orientation[0].value;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].orientation[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000186") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].orientation[0].value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].orientation[0]: " <<
                                                     ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].orientation[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].height.size() != 0) {
                                    // Field name: height
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_196 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].height[0].value = *_tmp_196;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].height[0].value;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].height[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000187") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].height[0].value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].height[0]: " <<
                                                     ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.elliptical[0].height[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_4 == 4)  // CHOICE Shape  fieldName(radial)
                        {
                            its_container_v3_etsi_its_cdd_msgs::msg::RadialShape _tmp_197;
                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial.push_back(_tmp_197);
                        
                                // RadialShape  SEQUENCE
                                    //  shapeReferencePoint                   CartesianPosition3d   OPTIONAL  
                                    //  range                                 StandardLength12b       
                                    //  stationaryHorizontalOpeningAngleStart Wgs84AngleValue         
                                    //  stationaryHorizontalOpeningAngleEnd   Wgs84AngleValue         
                                    //  verticalOpeningAngleStart             CartesianAngleValue   OPTIONAL  
                                    //  verticalOpeningAngleEnd               CartesianAngleValue   OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_198;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point.push_back(_tmp_198);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000188") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_199;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].vertical_opening_angle_start.push_back(_tmp_199);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000189") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].vertical_opening_angle_start " << tools::green("present");
                                }
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_200;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].vertical_opening_angle_end.push_back(_tmp_200);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000190") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].vertical_opening_angle_end " << tools::green("present");
                                }
                                
                                if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point.size() != 0) {
                                    // Field name: shape_reference_point
                                        // CartesianPosition3d  SEQUENCE
                                            //  xCoordinate CartesianCoordinate     
                                            //  yCoordinate CartesianCoordinate     
                                            //  zCoordinate CartesianCoordinate   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_201;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate.push_back(_tmp_201);
                                        
                                            if(debug)
                                                logger->print() << "|" << tools::brown("000191") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                        }
                                        
                                        // Field name: x_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_202 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value = *_tmp_202;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000192") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: y_coordinate
                                        // Real
                                        // Float
                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_203 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value = *_tmp_203;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value += -32768;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000193") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate: " <<
                                                         ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                            // Field name: z_coordinate
                                            // Real
                                            // Float
                                            // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_204 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_204;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000194") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                             ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                                
                                // Field name: range
                                // Real
                                // Float
                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_205 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].range.value = *_tmp_205;
                                __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].range.value;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].range.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000195") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].range.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].range: " <<
                                                 ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].range.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: stationary_horizontal_opening_angle_start
                                // Real
                                // Float
                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_206 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value = *_tmp_206;
                                __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000196") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start: " <<
                                                 ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].stationary_horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: stationary_horizontal_opening_angle_end
                                // Real
                                // Float
                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                uint16_t* _tmp_207 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value = *_tmp_207;
                                __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value /= 10.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000197") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end: " <<
                                                 ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].stationary_horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].vertical_opening_angle_start.size() != 0) {
                                    // Field name: vertical_opening_angle_start
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_208 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].vertical_opening_angle_start[0].value = *_tmp_208;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].vertical_opening_angle_start[0].value;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].vertical_opening_angle_start[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000198") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].vertical_opening_angle_start[0]: " <<
                                                     ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].vertical_opening_angle_end.size() != 0) {
                                    // Field name: vertical_opening_angle_end
                                    // Real
                                    // Float
                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                    uint16_t* _tmp_209 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].vertical_opening_angle_end[0].value = *_tmp_209;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].vertical_opening_angle_end[0].value;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].vertical_opening_angle_end[0].value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000199") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].vertical_opening_angle_end[0]: " <<
                                                     ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial[0].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                        }
                        else if(_choice_4 == 5)  // CHOICE Shape  fieldName(radial_shapes)
                        {
                            its_container_v3_etsi_its_cdd_msgs::msg::RadialShapes _tmp_210;
                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes.push_back(_tmp_210);
                        
                                // RadialShapes  SEQUENCE
                                    //  refPointId       Identifier1B                 
                                    //  xCoordinate      CartesianCoordinateSmall     
                                    //  yCoordinate      CartesianCoordinateSmall     
                                    //  zCoordinate      CartesianCoordinateSmall   OPTIONAL  
                                    //  radialShapesList RadialShapesList             
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinateSmall _tmp_211;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].z_coordinate.push_back(_tmp_211);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000200") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].z_coordinate " << tools::green("present");
                                }
                                
                                // Field name: ref_point_id
                                // Integer
                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                uint8_t* _tmp_212 = (uint8_t*) buffer++;
                                __aux64__ = *_tmp_212;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].ref_point_id.value = __aux64__;
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000201") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].ref_point_id.value) << 
                                                 " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].ref_point_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].ref_point_id.value);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].ref_point_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].ref_point_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                    return false;
                                }
                                
                                // Field name: x_coordinate
                                // Real
                                // Float
                                // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                uint16_t* _tmp_213 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].x_coordinate.value = *_tmp_213;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].x_coordinate.value += -3094;
                                __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].x_coordinate.value;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].x_coordinate.value /= 100.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000202") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].x_coordinate.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].x_coordinate: " <<
                                                 ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].x_coordinate.value << " (" << __aux64__ << ")";
                                }
                                
                                // Field name: y_coordinate
                                // Real
                                // Float
                                // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                uint16_t* _tmp_214 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].y_coordinate.value = *_tmp_214;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].y_coordinate.value += -3094;
                                __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].y_coordinate.value;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].y_coordinate.value /= 100.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000203") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].y_coordinate.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].y_coordinate: " <<
                                                 ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].y_coordinate.value << " (" << __aux64__ << ")";
                                }
                                
                                if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].z_coordinate.size() != 0) {
                                    // Field name: z_coordinate
                                    // Real
                                    // Float
                                    // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_215 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].z_coordinate[0].value = *_tmp_215;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].z_coordinate[0].value += -3094;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].z_coordinate[0].value;
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].z_coordinate[0].value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000204") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].z_coordinate[0].value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].z_coordinate[0]: " <<
                                                     ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                    }
                                }
                                
                                // Field name: radial_shapes_list
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(16) span(16)
                                uint8_t* _ext_flag_118 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000205") << "| Reading ext flag from ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.: " << int(*_ext_flag_118);
                                }
                                
                                int16_t* _tmp_216 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_216;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_216 = __aux64__;
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000206") << "| SequenceOf ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list. size: " << int(__aux64__);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int h = 0; h < _if__tmp_216; h++) {
                                    its_container_v3_etsi_its_cdd_msgs::msg::RadialShapeDetails seqof_h;  // SEQUENCE
                                    ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements.push_back(seqof_h);
                                
                                        // RadialShapeDetails  SEQUENCE
                                            //  range                       StandardLength12b       
                                            //  horizontalOpeningAngleStart CartesianAngleValue     
                                            //  horizontalOpeningAngleEnd   CartesianAngleValue     
                                            //  verticalOpeningAngleStart   CartesianAngleValue   OPTIONAL  
                                            //  verticalOpeningAngleEnd     CartesianAngleValue   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_217;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_start.push_back(_tmp_217);
                                        
                                            if(debug)
                                                logger->print() << "|" << tools::brown("000207") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_start " << tools::green("present");
                                        }
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_218;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_end.push_back(_tmp_218);
                                        
                                            if(debug)
                                                logger->print() << "|" << tools::brown("000208") << "| ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_end " << tools::green("present");
                                        }
                                        
                                        // Field name: range
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_219 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].range.value = *_tmp_219;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].range.value;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].range.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000209") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].range.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].range: " <<
                                                         ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].range.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: horizontal_opening_angle_start
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_220 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_start.value = *_tmp_220;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_start.value;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_start.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000210") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_start: " <<
                                                         ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: horizontal_opening_angle_end
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_221 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_end.value = *_tmp_221;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_end.value;
                                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_end.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000211") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_end: " <<
                                                         ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_start.size() != 0) {
                                            // Field name: vertical_opening_angle_start
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_222 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_start[0].value = *_tmp_222;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_start[0].value;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_start[0].value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000212") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_start[0]: " <<
                                                             ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                        
                                        if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_end.size() != 0) {
                                            // Field name: vertical_opening_angle_end
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_223 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_end[0].value = *_tmp_223;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_end[0].value;
                                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_end[0].value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000213") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_end[0]: " <<
                                                             ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perception_region_shape.radial_shapes[0].radial_shapes_list.elements[h].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                            }
                                        }
                                }
                        }
                        else
                        {
                            uint16_t* _tmp_224 = (uint16_t*)buffer;  // OpenType length
                            buffer += 2 + int(*_tmp_224);            // Ignoring opentype data
                        }
                        
                        // Field name: shadowing_applies
                        // Value
                        // Boolean
                        uint8_t* _tmp_225 = (uint8_t*)buffer;
                        buffer++;
                        ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].shadowing_applies.value = (*_tmp_225 == 1);
                        if(debug)
                            logger->print() << "|" << tools::brown("000214") << "| \033[37;1mbool  \033[0m ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].shadowing_applies.: " << (*_tmp_225);
                        
                        if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].sensor_id_list.size() != 0) {
                            // Field name: sensor_id_list
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(1) max(128) span(128)
                            uint8_t* _ext_flag_124 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].sensor_id_list[0].
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000215") << "| Reading ext flag from ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].sensor_id_list[0].: " << int(*_ext_flag_124);
                            }
                            
                            int16_t* _tmp_226 = (int16_t*)buffer;
                            buffer += 2;
                            __aux64__ = *_tmp_226;
                            __aux64__ += 1;     // +min
                            
                            int _if__tmp_226 = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000216") << "| SequenceOf ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].sensor_id_list[0]. size: " << int(__aux64__);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].sensor_id_list[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 128) {
                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].sensor_id_list[0].value' " << (__aux64__) << " exceeds max allowable (128); message dropped.";
                                return false;
                            }
                            
                            
                            for(int i = 0; i < _if__tmp_226; i++) {
                                its_container_v3_etsi_its_cdd_msgs::msg::Identifier1B seqof_i;  // INTEGER
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].sensor_id_list[0].elements.push_back(seqof_i);
                            
                                // Integer
                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                uint8_t* _tmp_227 = (uint8_t*) buffer++;
                                __aux64__ = *_tmp_227;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].sensor_id_list[0].elements[i].value = __aux64__;
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000217") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].sensor_id_list[0].elements[i].value) << 
                                                 " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].sensor_id_list[0].elements[i].value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].sensor_id_list[0].elements[i].value);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].sensor_id_list[0].elements[i].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].sensor_id_list[0].elements[i].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                    return false;
                                }
                                
                                
                            }
                        }
                        
                        if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].number_of_perceived_objects.size() != 0) {
                            // Field name: number_of_perceived_objects
                            // Integer
                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                            uint8_t* _tmp_228 = (uint8_t*) buffer++;
                            __aux64__ = *_tmp_228;
                            ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].number_of_perceived_objects[0].value = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000218") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].number_of_perceived_objects[0].value) << 
                                             " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].number_of_perceived_objects[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].number_of_perceived_objects[0].value);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].number_of_perceived_objects[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].number_of_perceived_objects[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                        }
                        
                        if(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perceived_object_ids.size() != 0) {
                            // Field name: perceived_object_ids
                            // SequenceOf
                            // Data Type UInt8
                            // SEQUENCE_OF  min(0) max(255) span(256)
                            uint8_t* _ext_flag_125 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perceived_object_ids[0].
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000219") << "| Reading ext flag from ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perceived_object_ids[0].: " << int(*_ext_flag_125);
                            }
                            
                            int16_t* _tmp_229 = (int16_t*)buffer;
                            buffer += 2;
                            __aux64__ = *_tmp_229;
                            
                            int _if__tmp_229 = __aux64__;
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000220") << "| SequenceOf ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perceived_object_ids[0]. size: " << int(__aux64__);
                            }
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perceived_object_ids[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perceived_object_ids[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                return false;
                            }
                            
                            
                            for(int j = 0; j < _if__tmp_229; j++) {
                                its_container_v3_etsi_its_cdd_msgs::msg::Identifier2B seqof_j;  // INTEGER
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perceived_object_ids[0].elements.push_back(seqof_j);
                            
                                // Integer
                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                uint16_t* _tmp_230 = (uint16_t*) buffer; buffer += 2;
                                __aux64__ = *_tmp_230;
                                ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perceived_object_ids[0].elements[j].value = __aux64__;
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000221") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perceived_object_ids[0].elements[j].value) << 
                                                 " payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perceived_object_ids[0].elements[j].value: " << ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perceived_object_ids[0].elements[j].value;
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perceived_object_ids[0].elements[j].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perception_region_container[0].elements[f].perceived_object_ids[0].elements[j].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                    return false;
                                }
                                
                                
                            }
                        }
                        if(*_ext_flag_77) { // from ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f]. 
                            uint8_t* _tmp_231 = (uint8_t*) buffer++;  // number of extensions
                            bool _array_6[*_tmp_231];
                            
                            if(debug)
                                logger->print() << "|" << tools::brown("000222") << "| Reading number of exts from ros->payload.cpm_containers.elements[a].perception_region_container[0].elements[f].: " << static_cast<unsigned int>(*_tmp_231);
                            
                            // Extensions bytemap
                            for(int i = 0; i < *_tmp_231; i++)
                                _array_6[i] = (*buffer++) != 0;
                            
                            // Discarding unknown OpenType containers
                            for(int i = 0; i < *_tmp_231; i++) {
                                uint16_t* _tmp_232 = (uint16_t*)buffer;  // OpenType length
                                buffer += 2;
                            
                                if(debug) {
                                }
                            
                                for(int i = 0; i < *_tmp_232; i++)
                                    buffer++;
                            }
                            
                        }
                }
            }
            else if(_choice_1 == 4)  // CHOICE WrappedCpmContainer  fieldName(perceived_object_container)
            {
                cpm_v2_23_cpm_perceivedobjectcontainer_msgs::msg::PerceivedObjectContainer _tmp_233;
                ros->payload.cpm_containers.elements[a].perceived_object_container.push_back(_tmp_233);
            
                    // PerceivedObjectContainer  SEQUENCE
                        //  numberOfPerceivedObjects CardinalNumber1B     
                        //  perceivedObjects         PerceivedObjects     
                        //  ...
                    uint8_t* _ext_flag_126 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[a].perceived_object_container[0].
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000223") << "| Reading ext flag from ros->payload.cpm_containers.elements[a].perceived_object_container[0].: " << int(*_ext_flag_126);
                    }
                    
                    
                    // Field name: number_of_perceived_objects
                    // Integer
                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                    uint8_t* _tmp_234 = (uint8_t*) buffer++;
                    __aux64__ = *_tmp_234;
                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].number_of_perceived_objects.value = __aux64__;
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000224") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].number_of_perceived_objects.value) << 
                                     " payload.cpm_containers.elements[a].perceived_object_container[0].number_of_perceived_objects.value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].perceived_object_container[0].number_of_perceived_objects.value);
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].number_of_perceived_objects.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].number_of_perceived_objects.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                        return false;
                    }
                    
                    // Field name: perceived_objects
                    // SequenceOf
                    // Data Type UInt8
                    // SEQUENCE_OF  min(0) max(255) span(256)
                    uint8_t* _ext_flag_127 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000225") << "| Reading ext flag from ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.: " << int(*_ext_flag_127);
                    }
                    
                    int16_t* _tmp_235 = (int16_t*)buffer;
                    buffer += 2;
                    __aux64__ = *_tmp_235;
                    
                    int _if__tmp_235 = __aux64__;
                    
                    if(debug) {
                        logger->print() << "|" << tools::brown("000226") << "| SequenceOf ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects. size: " << int(__aux64__);
                    }
                    
                    // ******************* MIN validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                        return false;
                    }
                    // ******************* MAX validator *******************
                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                        return false;
                    }
                    
                    
                    for(int k = 0; k < _if__tmp_235; k++) {
                        its_container_v3_etsi_its_cdd_msgs::msg::PerceivedObject seqof_k;  // SEQUENCE
                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements.push_back(seqof_k);
                    
                            // PerceivedObject  SEQUENCE
                                //  objectId                           Identifier2B                                           OPTIONAL  
                                //  measurementDeltaTime               DeltaTimeMilliSecondSigned                               
                                //  position                           CartesianPosition3dWithConfidence                        
                                //  velocity                           Velocity3dWithConfidence                               OPTIONAL  
                                //  acceleration                       Acceleration3dWithConfidence                           OPTIONAL  
                                //  angles                             EulerAnglesWithConfidence                              OPTIONAL  
                                //  zAngularVelocity                   CartesianAngularVelocityComponent                      OPTIONAL  
                                //  lowerTriangularCorrelationMatrices LowerTriangularPositiveSemidefiniteMatrices            OPTIONAL  
                                //  objectDimensionZ                   ObjectDimension                                        OPTIONAL  
                                //  objectDimensionY                   ObjectDimension                                        OPTIONAL  
                                //  objectDimensionX                   ObjectDimension                                        OPTIONAL  
                                //  objectAge                          PerceivedObject_DeltaTimeMilliSecondSigned_objectAge   OPTIONAL  
                                //  objectPerceptionQuality            ObjectPerceptionQuality                                OPTIONAL  
                                //  sensorIdList                       SequenceOfIdentifier1B                                 OPTIONAL  
                                //  classification                     ObjectClassDescription                                 OPTIONAL  
                                //  mapPosition                        MapPosition                                            OPTIONAL  
                                //  ...
                            uint8_t* _ext_flag_128 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000227") << "| Reading ext flag from ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].: " << int(*_ext_flag_128);
                            }
                            
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::Identifier2B _tmp_236;
                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_id.push_back(_tmp_236);
                            
                                if(debug)
                                    logger->print() << "|" << tools::brown("000228") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_id " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::Velocity3dWithConfidence _tmp_237;
                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity.push_back(_tmp_237);
                            
                                if(debug)
                                    logger->print() << "|" << tools::brown("000229") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::Acceleration3dWithConfidence _tmp_238;
                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration.push_back(_tmp_238);
                            
                                if(debug)
                                    logger->print() << "|" << tools::brown("000230") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::EulerAnglesWithConfidence _tmp_239;
                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles.push_back(_tmp_239);
                            
                                if(debug)
                                    logger->print() << "|" << tools::brown("000231") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngularVelocityComponent _tmp_240;
                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].z_angular_velocity.push_back(_tmp_240);
                            
                                if(debug)
                                    logger->print() << "|" << tools::brown("000232") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].z_angular_velocity " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::LowerTriangularPositiveSemidefiniteMatrices _tmp_241;
                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices.push_back(_tmp_241);
                            
                                if(debug)
                                    logger->print() << "|" << tools::brown("000233") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::ObjectDimension _tmp_242;
                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_z.push_back(_tmp_242);
                            
                                if(debug)
                                    logger->print() << "|" << tools::brown("000234") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_z " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::ObjectDimension _tmp_243;
                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_y.push_back(_tmp_243);
                            
                                if(debug)
                                    logger->print() << "|" << tools::brown("000235") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_y " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::ObjectDimension _tmp_244;
                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_x.push_back(_tmp_244);
                            
                                if(debug)
                                    logger->print() << "|" << tools::brown("000236") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_x " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::PerceivedObjectDeltaTimeMilliSecondSignedObjectAge _tmp_245;
                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_age.push_back(_tmp_245);
                            
                                if(debug)
                                    logger->print() << "|" << tools::brown("000237") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_age " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::ObjectPerceptionQuality _tmp_246;
                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_perception_quality.push_back(_tmp_246);
                            
                                if(debug)
                                    logger->print() << "|" << tools::brown("000238") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_perception_quality " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::SequenceOfIdentifier1B _tmp_247;
                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].sensor_id_list.push_back(_tmp_247);
                            
                                if(debug)
                                    logger->print() << "|" << tools::brown("000239") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].sensor_id_list " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::ObjectClassDescription _tmp_248;
                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification.push_back(_tmp_248);
                            
                                if(debug)
                                    logger->print() << "|" << tools::brown("000240") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification " << tools::green("present");
                            }
                            if(*(buffer++)) { 
                                its_container_v3_etsi_its_cdd_msgs::msg::MapPosition _tmp_249;
                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position.push_back(_tmp_249);
                            
                                if(debug)
                                    logger->print() << "|" << tools::brown("000241") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position " << tools::green("present");
                            }
                            
                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_id.size() != 0) {
                                // Field name: object_id
                                // Integer
                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                uint16_t* _tmp_250 = (uint16_t*) buffer; buffer += 2;
                                __aux64__ = *_tmp_250;
                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_id[0].value = __aux64__;
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000242") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_id[0].value) << 
                                                 " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_id[0].value: " << ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_id[0].value;
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_id[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                    return false;
                                }
                            }
                            
                            // Field name: measurement_delta_time
                            // Real
                            // Float
                            // FLOAT  min(-2048) max(2047) span(4096) scaleDivisor(1000.0) dataType(Float)
                            uint16_t* _tmp_251 = (uint16_t*) buffer; buffer += 2;
                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].measurement_delta_time.value = *_tmp_251;
                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].measurement_delta_time.value += -2048;
                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].measurement_delta_time.value;
                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].measurement_delta_time.value /= 1000.0;
                            
                            // ******************* MIN validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ < -2048) {
                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].measurement_delta_time.value' " << (__aux64__) << " is less than allowable (-2048); message dropped.";
                                return false;
                            }
                            // ******************* MAX validator *******************
                            if(VALIDATORS_ENABLED && __aux64__ > 2047) {
                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].measurement_delta_time.value' " << (__aux64__) << " exceeds max allowable (2047); message dropped.";
                                return false;
                            }
                            
                            if(debug) {
                                logger->print() << "|" << tools::brown("000243") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].measurement_delta_time.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].measurement_delta_time: " <<
                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].measurement_delta_time.value << " (" << __aux64__ << ")";
                            }
                            
                            // Field name: position
                                // CartesianPosition3dWithConfidence  SEQUENCE
                                    //  xCoordinate CartesianCoordinateWithConfidence     
                                    //  yCoordinate CartesianCoordinateWithConfidence     
                                    //  zCoordinate CartesianCoordinateWithConfidence   OPTIONAL  
                                if(*(buffer++)) { 
                                    its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinateWithConfidence _tmp_252;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.z_coordinate.push_back(_tmp_252);
                                
                                    if(debug)
                                        logger->print() << "|" << tools::brown("000244") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.z_coordinate " << tools::green("present");
                                }
                                
                                // Field name: x_coordinate
                                    // CartesianCoordinateWithConfidence  SEQUENCE
                                        //  value      CartesianCoordinateLarge     
                                        //  confidence CoordinateConfidence         
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                    uint32_t* _tmp_253 = (uint32_t*) buffer; buffer += 4;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.x_coordinate.value.value = *_tmp_253;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.x_coordinate.value.value += -131072;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.x_coordinate.value.value;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.x_coordinate.value.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -131072) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.x_coordinate.value.value' " << (__aux64__) << " is less than allowable (-131072); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 131071) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.x_coordinate.value.value' " << (__aux64__) << " exceeds max allowable (131071); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000245") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.x_coordinate.value.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.x_coordinate.value: " <<
                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.x_coordinate.value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_254 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.x_coordinate.confidence.value = *_tmp_254;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.x_coordinate.confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.x_coordinate.confidence.value;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.x_coordinate.confidence.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.x_coordinate.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4096) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.x_coordinate.confidence.value' " << (__aux64__) << " exceeds max allowable (4096); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000246") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.x_coordinate.confidence.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.x_coordinate.confidence: " <<
                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.x_coordinate.confidence.value << " (" << __aux64__ << ")";
                                    }
                                
                                // Field name: y_coordinate
                                    // CartesianCoordinateWithConfidence  SEQUENCE
                                        //  value      CartesianCoordinateLarge     
                                        //  confidence CoordinateConfidence         
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                    uint32_t* _tmp_255 = (uint32_t*) buffer; buffer += 4;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.y_coordinate.value.value = *_tmp_255;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.y_coordinate.value.value += -131072;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.y_coordinate.value.value;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.y_coordinate.value.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -131072) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.y_coordinate.value.value' " << (__aux64__) << " is less than allowable (-131072); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 131071) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.y_coordinate.value.value' " << (__aux64__) << " exceeds max allowable (131071); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000247") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.y_coordinate.value.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.y_coordinate.value: " <<
                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.y_coordinate.value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                    uint16_t* _tmp_256 = (uint16_t*) buffer; buffer += 2;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.y_coordinate.confidence.value = *_tmp_256;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.y_coordinate.confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.y_coordinate.confidence.value;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.y_coordinate.confidence.value /= 100.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.y_coordinate.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 4096) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.y_coordinate.confidence.value' " << (__aux64__) << " exceeds max allowable (4096); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000248") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.y_coordinate.confidence.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.y_coordinate.confidence: " <<
                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.y_coordinate.confidence.value << " (" << __aux64__ << ")";
                                    }
                                
                                if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.z_coordinate.size() != 0) {
                                    // Field name: z_coordinate
                                        // CartesianCoordinateWithConfidence  SEQUENCE
                                            //  value      CartesianCoordinateLarge     
                                            //  confidence CoordinateConfidence         
                                        
                                        // Field name: value
                                        // Real
                                        // Float
                                        // FLOAT  min(-131072) max(131071) span(262144) scaleDivisor(100.0) dataType(Float)
                                        uint32_t* _tmp_257 = (uint32_t*) buffer; buffer += 4;
                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.z_coordinate[0].value.value = *_tmp_257;
                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.z_coordinate[0].value.value += -131072;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.z_coordinate[0].value.value;
                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.z_coordinate[0].value.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < -131072) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.z_coordinate[0].value.value' " << (__aux64__) << " is less than allowable (-131072); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 131071) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.z_coordinate[0].value.value' " << (__aux64__) << " exceeds max allowable (131071); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000249") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.z_coordinate[0].value.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.z_coordinate[0].value: " <<
                                                         ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.z_coordinate[0].value.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: confidence
                                        // Real
                                        // Float
                                        // FLOAT  min(1) max(4096) span(4096) scaleDivisor(100.0) dataType(Float)
                                        uint16_t* _tmp_258 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.z_coordinate[0].confidence.value = *_tmp_258;
                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.z_coordinate[0].confidence.value += 1;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.z_coordinate[0].confidence.value;
                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.z_coordinate[0].confidence.value /= 100.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.z_coordinate[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 4096) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.z_coordinate[0].confidence.value' " << (__aux64__) << " exceeds max allowable (4096); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000250") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.z_coordinate[0].confidence.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.z_coordinate[0].confidence: " <<
                                                         ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].position.z_coordinate[0].confidence.value << " (" << __aux64__ << ")";
                                        }
                                }
                            
                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity.size() != 0) {
                                // Field name: velocity
                                // Choice
                                   // #0  polarVelocity   VelocityPolarWithZ   
                                   // #1  cartesianVelocity   VelocityCartesian   
                                uint8_t _choice_5 = *(buffer++);
                                
                                if(_choice_5 == 0) {
                                    its_container_v3_etsi_its_cdd_msgs::msg::VelocityPolarWithZ _tmp_259;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity.push_back(_tmp_259);
                                
                                        // VelocityPolarWithZ  SEQUENCE
                                            //  velocityMagnitude Speed                 
                                            //  velocityDirection CartesianAngle        
                                            //  zVelocity         VelocityComponent   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::VelocityComponent _tmp_260;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].z_velocity.push_back(_tmp_260);
                                        
                                            if(debug)
                                                logger->print() << "|" << tools::brown("000251") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].z_velocity " << tools::green("present");
                                        }
                                        
                                        // Field name: velocity_magnitude
                                            // Speed  SEQUENCE
                                                //  speedValue      SpeedValue          
                                                //  speedConfidence SpeedConfidence     
                                            
                                            // Field name: speed_value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(16383) span(16384) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_261 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value = *_tmp_261;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000252") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_magnitude.speed_value: " <<
                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_magnitude.speed_value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: speed_confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                            uint8_t* _tmp_262 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value = *_tmp_262;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000253") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence: " <<
                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_magnitude.speed_confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        // Field name: velocity_direction
                                            // CartesianAngle  SEQUENCE
                                                //  value      CartesianAngleValue     
                                                //  confidence AngleConfidence         
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_263 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_direction.value.value = *_tmp_263;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_direction.value.value;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_direction.value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_direction.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_direction.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000254") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_direction.value.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_direction.value: " <<
                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_direction.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_264 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_direction.confidence.value = *_tmp_264;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_direction.confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_direction.confidence.value;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_direction.confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_direction.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_direction.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000255") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_direction.confidence.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_direction.confidence: " <<
                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].velocity_direction.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].z_velocity.size() != 0) {
                                            // Field name: z_velocity
                                                // VelocityComponent  SEQUENCE
                                                    //  value      VelocityComponentValue     
                                                    //  confidence SpeedConfidence            
                                                
                                                // Field name: value
                                                // Real
                                                // Float
                                                // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_265 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].z_velocity[0].value.value = *_tmp_265;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].z_velocity[0].value.value += -16383;
                                                __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].z_velocity[0].value.value;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].z_velocity[0].value.value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].z_velocity[0].value.value' " << (__aux64__) << " is less than allowable (-16383); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].z_velocity[0].value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000256") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].z_velocity[0].value.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].z_velocity[0].value: " <<
                                                                 ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].z_velocity[0].value.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: confidence
                                                // Real
                                                // Float
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                uint8_t* _tmp_266 = (uint8_t*) buffer++;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].z_velocity[0].confidence.value = *_tmp_266;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].z_velocity[0].confidence.value += 1;
                                                __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].z_velocity[0].confidence.value;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].z_velocity[0].confidence.value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].z_velocity[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].z_velocity[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000257") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].z_velocity[0].confidence.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].z_velocity[0].confidence: " <<
                                                                 ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].polar_velocity[0].z_velocity[0].confidence.value << " (" << __aux64__ << ")";
                                                }
                                        }
                                }
                                else if(_choice_5 == 1)  // CHOICE Velocity3dWithConfidence  fieldName(cartesian_velocity)
                                {
                                    its_container_v3_etsi_its_cdd_msgs::msg::VelocityCartesian _tmp_267;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity.push_back(_tmp_267);
                                
                                        // VelocityCartesian  SEQUENCE
                                            //  xVelocity  VelocityComponent     
                                            //  yVelocity  VelocityComponent     
                                            //  zVelocity  VelocityComponent   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::VelocityComponent _tmp_268;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].z_velocity.push_back(_tmp_268);
                                        
                                            if(debug)
                                                logger->print() << "|" << tools::brown("000258") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].z_velocity " << tools::green("present");
                                        }
                                        
                                        // Field name: x_velocity
                                            // VelocityComponent  SEQUENCE
                                                //  value      VelocityComponentValue     
                                                //  confidence SpeedConfidence            
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_269 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].x_velocity.value.value = *_tmp_269;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].x_velocity.value.value += -16383;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].x_velocity.value.value;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].x_velocity.value.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].x_velocity.value.value' " << (__aux64__) << " is less than allowable (-16383); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].x_velocity.value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000259") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].x_velocity.value.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].x_velocity.value: " <<
                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].x_velocity.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                            uint8_t* _tmp_270 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].x_velocity.confidence.value = *_tmp_270;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].x_velocity.confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].x_velocity.confidence.value;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].x_velocity.confidence.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].x_velocity.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].x_velocity.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000260") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].x_velocity.confidence.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].x_velocity.confidence: " <<
                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].x_velocity.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        // Field name: y_velocity
                                            // VelocityComponent  SEQUENCE
                                                //  value      VelocityComponentValue     
                                                //  confidence SpeedConfidence            
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                            uint16_t* _tmp_271 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].y_velocity.value.value = *_tmp_271;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].y_velocity.value.value += -16383;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].y_velocity.value.value;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].y_velocity.value.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].y_velocity.value.value' " << (__aux64__) << " is less than allowable (-16383); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].y_velocity.value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000261") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].y_velocity.value.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].y_velocity.value: " <<
                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].y_velocity.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                            uint8_t* _tmp_272 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].y_velocity.confidence.value = *_tmp_272;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].y_velocity.confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].y_velocity.confidence.value;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].y_velocity.confidence.value /= 100.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].y_velocity.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].y_velocity.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000262") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].y_velocity.confidence.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].y_velocity.confidence: " <<
                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].y_velocity.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].z_velocity.size() != 0) {
                                            // Field name: z_velocity
                                                // VelocityComponent  SEQUENCE
                                                    //  value      VelocityComponentValue     
                                                    //  confidence SpeedConfidence            
                                                
                                                // Field name: value
                                                // Real
                                                // Float
                                                // FLOAT  min(-16383) max(16383) span(32767) scaleDivisor(100.0) dataType(Float)
                                                uint16_t* _tmp_273 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].z_velocity[0].value.value = *_tmp_273;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].z_velocity[0].value.value += -16383;
                                                __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].z_velocity[0].value.value;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].z_velocity[0].value.value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -16383) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].z_velocity[0].value.value' " << (__aux64__) << " is less than allowable (-16383); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 16383) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].z_velocity[0].value.value' " << (__aux64__) << " exceeds max allowable (16383); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000263") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].z_velocity[0].value.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].z_velocity[0].value: " <<
                                                                 ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].z_velocity[0].value.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: confidence
                                                // Real
                                                // Float
                                                // FLOAT  min(1) max(127) span(127) scaleDivisor(100.0) dataType(Float)
                                                uint8_t* _tmp_274 = (uint8_t*) buffer++;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value = *_tmp_274;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value += 1;
                                                __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value /= 100.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000264") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].z_velocity[0].confidence: " <<
                                                                 ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0].cartesian_velocity[0].z_velocity[0].confidence.value << " (" << __aux64__ << ")";
                                                }
                                        }
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(_choice_5) << ") selected in CHOICE Velocity3dWithConfidence in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].velocity[0]'; message dropped.";
                                    return false;
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration.size() != 0) {
                                // Field name: acceleration
                                // Choice
                                   // #0  polarAcceleration   AccelerationPolarWithZ   
                                   // #1  cartesianAcceleration   AccelerationCartesian   
                                uint8_t _choice_6 = *(buffer++);
                                
                                if(_choice_6 == 0) {
                                    its_container_v3_etsi_its_cdd_msgs::msg::AccelerationPolarWithZ _tmp_275;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration.push_back(_tmp_275);
                                
                                        // AccelerationPolarWithZ  SEQUENCE
                                            //  accelerationMagnitude AccelerationMagnitude     
                                            //  accelerationDirection CartesianAngle            
                                            //  zAcceleration         AccelerationComponent   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::AccelerationComponent _tmp_276;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].z_acceleration.push_back(_tmp_276);
                                        
                                            if(debug)
                                                logger->print() << "|" << tools::brown("000265") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].z_acceleration " << tools::green("present");
                                        }
                                        
                                        // Field name: acceleration_magnitude
                                            // AccelerationMagnitude  SEQUENCE
                                                //  accelerationMagnitudeValue AccelerationMagnitudeValue     
                                                //  accelerationConfidence     AccelerationConfidence         
                                            
                                            // Field name: acceleration_magnitude_value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(161) span(162) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_277 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value = *_tmp_277;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000266") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value: " <<
                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_magnitude_value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: acceleration_confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_278 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value = *_tmp_278;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000267") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence: " <<
                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_magnitude.acceleration_confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        // Field name: acceleration_direction
                                            // CartesianAngle  SEQUENCE
                                                //  value      CartesianAngleValue     
                                                //  confidence AngleConfidence         
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_279 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_direction.value.value = *_tmp_279;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_direction.value.value;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_direction.value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_direction.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_direction.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000268") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_direction.value.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_direction.value: " <<
                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_direction.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_280 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value = *_tmp_280;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000269") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_direction.confidence: " <<
                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].acceleration_direction.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].z_acceleration.size() != 0) {
                                            // Field name: z_acceleration
                                                // AccelerationComponent  SEQUENCE
                                                    //  value      AccelerationValue          
                                                    //  confidence AccelerationConfidence     
                                                
                                                // Field name: value
                                                // Real
                                                // Float
                                                // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                uint16_t* _tmp_281 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value = *_tmp_281;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value += -160;
                                                __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -160) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value' " << (__aux64__) << " is less than allowable (-160); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000270") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].z_acceleration[0].value: " <<
                                                                 ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].z_acceleration[0].value.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: confidence
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                uint8_t* _tmp_282 = (uint8_t*) buffer++;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value = *_tmp_282;
                                                __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000271") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence: " <<
                                                                 ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].polar_acceleration[0].z_acceleration[0].confidence.value << " (" << __aux64__ << ")";
                                                }
                                        }
                                }
                                else if(_choice_6 == 1)  // CHOICE Acceleration3dWithConfidence  fieldName(cartesian_acceleration)
                                {
                                    its_container_v3_etsi_its_cdd_msgs::msg::AccelerationCartesian _tmp_283;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration.push_back(_tmp_283);
                                
                                        // AccelerationCartesian  SEQUENCE
                                            //  xAcceleration AccelerationComponent     
                                            //  yAcceleration AccelerationComponent     
                                            //  zAcceleration AccelerationComponent   OPTIONAL  
                                        if(*(buffer++)) { 
                                            its_container_v3_etsi_its_cdd_msgs::msg::AccelerationComponent _tmp_284;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].z_acceleration.push_back(_tmp_284);
                                        
                                            if(debug)
                                                logger->print() << "|" << tools::brown("000272") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].z_acceleration " << tools::green("present");
                                        }
                                        
                                        // Field name: x_acceleration
                                            // AccelerationComponent  SEQUENCE
                                                //  value      AccelerationValue          
                                                //  confidence AccelerationConfidence     
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_285 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value = *_tmp_285;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value += -160;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -160) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value' " << (__aux64__) << " is less than allowable (-160); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000273") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].x_acceleration.value: " <<
                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].x_acceleration.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_286 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value = *_tmp_286;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000274") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence: " <<
                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].x_acceleration.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        // Field name: y_acceleration
                                            // AccelerationComponent  SEQUENCE
                                                //  value      AccelerationValue          
                                                //  confidence AccelerationConfidence     
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_287 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value = *_tmp_287;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value += -160;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < -160) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value' " << (__aux64__) << " is less than allowable (-160); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000275") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].y_acceleration.value: " <<
                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].y_acceleration.value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_288 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value = *_tmp_288;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000276") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence: " <<
                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].y_acceleration.confidence.value << " (" << __aux64__ << ")";
                                            }
                                        
                                        if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].z_acceleration.size() != 0) {
                                            // Field name: z_acceleration
                                                // AccelerationComponent  SEQUENCE
                                                    //  value      AccelerationValue          
                                                    //  confidence AccelerationConfidence     
                                                
                                                // Field name: value
                                                // Real
                                                // Float
                                                // FLOAT  min(-160) max(161) span(322) scaleDivisor(10.0) dataType(Float)
                                                uint16_t* _tmp_289 = (uint16_t*) buffer; buffer += 2;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value = *_tmp_289;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value += -160;
                                                __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -160) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value' " << (__aux64__) << " is less than allowable (-160); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 161) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value' " << (__aux64__) << " exceeds max allowable (161); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000277") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value: " <<
                                                                 ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].z_acceleration[0].value.value << " (" << __aux64__ << ")";
                                                }
                                                
                                                // Field name: confidence
                                                // Real
                                                // Float
                                                // FLOAT  min(0) max(102) span(103) scaleDivisor(10.0) dataType(Float)
                                                uint8_t* _tmp_290 = (uint8_t*) buffer++;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value = *_tmp_290;
                                                __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value /= 10.0;
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 102) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value' " << (__aux64__) << " exceeds max allowable (102); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000278") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence: " <<
                                                                 ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0].cartesian_acceleration[0].z_acceleration[0].confidence.value << " (" << __aux64__ << ")";
                                                }
                                        }
                                }
                                else
                                {
                                    logger->warning() << "Wrong option (" << static_cast<int>(_choice_6) << ") selected in CHOICE Acceleration3dWithConfidence in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].acceleration[0]'; message dropped.";
                                    return false;
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles.size() != 0) {
                                // Field name: angles
                                    // EulerAnglesWithConfidence  SEQUENCE
                                        //  zAngle     CartesianAngle     
                                        //  yAngle     CartesianAngle   OPTIONAL  
                                        //  xAngle     CartesianAngle   OPTIONAL  
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngle _tmp_291;
                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].y_angle.push_back(_tmp_291);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000279") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].y_angle " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngle _tmp_292;
                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].x_angle.push_back(_tmp_292);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000280") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].x_angle " << tools::green("present");
                                    }
                                    
                                    // Field name: z_angle
                                        // CartesianAngle  SEQUENCE
                                            //  value      CartesianAngleValue     
                                            //  confidence AngleConfidence         
                                        
                                        // Field name: value
                                        // Real
                                        // Float
                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                        uint16_t* _tmp_293 = (uint16_t*) buffer; buffer += 2;
                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].z_angle.value.value = *_tmp_293;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].z_angle.value.value;
                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].z_angle.value.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].z_angle.value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].z_angle.value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000281") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].z_angle.value.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].z_angle.value: " <<
                                                         ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].z_angle.value.value << " (" << __aux64__ << ")";
                                        }
                                        
                                        // Field name: confidence
                                        // Real
                                        // Float
                                        // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                        uint8_t* _tmp_294 = (uint8_t*) buffer++;
                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].z_angle.confidence.value = *_tmp_294;
                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].z_angle.confidence.value += 1;
                                        __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].z_angle.confidence.value;
                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].z_angle.confidence.value /= 10.0;
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].z_angle.confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].z_angle.confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                            return false;
                                        }
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000282") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].z_angle.confidence.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].z_angle.confidence: " <<
                                                         ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].z_angle.confidence.value << " (" << __aux64__ << ")";
                                        }
                                    
                                    if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].y_angle.size() != 0) {
                                        // Field name: y_angle
                                            // CartesianAngle  SEQUENCE
                                                //  value      CartesianAngleValue     
                                                //  confidence AngleConfidence         
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_295 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].y_angle[0].value.value = *_tmp_295;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].y_angle[0].value.value;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].y_angle[0].value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].y_angle[0].value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].y_angle[0].value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000283") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].y_angle[0].value.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].y_angle[0].value: " <<
                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].y_angle[0].value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_296 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].y_angle[0].confidence.value = *_tmp_296;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].y_angle[0].confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].y_angle[0].confidence.value;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].y_angle[0].confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].y_angle[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].y_angle[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000284") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].y_angle[0].confidence.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].y_angle[0].confidence: " <<
                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].y_angle[0].confidence.value << " (" << __aux64__ << ")";
                                            }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].x_angle.size() != 0) {
                                        // Field name: x_angle
                                            // CartesianAngle  SEQUENCE
                                                //  value      CartesianAngleValue     
                                                //  confidence AngleConfidence         
                                            
                                            // Field name: value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_297 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].x_angle[0].value.value = *_tmp_297;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].x_angle[0].value.value;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].x_angle[0].value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].x_angle[0].value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].x_angle[0].value.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000285") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].x_angle[0].value.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].x_angle[0].value: " <<
                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].x_angle[0].value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(1) max(127) span(127) scaleDivisor(10.0) dataType(Float)
                                            uint8_t* _tmp_298 = (uint8_t*) buffer++;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].x_angle[0].confidence.value = *_tmp_298;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].x_angle[0].confidence.value += 1;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].x_angle[0].confidence.value;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].x_angle[0].confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].x_angle[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 127) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].x_angle[0].confidence.value' " << (__aux64__) << " exceeds max allowable (127); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000286") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].x_angle[0].confidence.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].x_angle[0].confidence: " <<
                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].angles[0].x_angle[0].confidence.value << " (" << __aux64__ << ")";
                                            }
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].z_angular_velocity.size() != 0) {
                                // Field name: z_angular_velocity
                                    // CartesianAngularVelocityComponent  SEQUENCE
                                        //  value      CartesianAngularVelocityComponentValue     
                                        //  confidence AngularSpeedConfidence                     
                                    
                                    // Field name: value
                                    // Integer
                                    // INT16  min(-255) max(256) span(512) datatype(Int16)
                                    uint16_t* _tmp_299 = (uint16_t*) buffer; buffer += 2;
                                    __aux64__ = *_tmp_299;
                                    __aux64__ += -255;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].z_angular_velocity[0].value.value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000287") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].z_angular_velocity[0].value.value) << 
                                                     " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].z_angular_velocity[0].value.value: " << ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].z_angular_velocity[0].value.value;
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < -255) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].z_angular_velocity[0].value.value' " << (__aux64__) << " is less than allowable (-255); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 256) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].z_angular_velocity[0].value.value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                                        return false;
                                    }
                                    
                                    // Field name: confidence
                                    // Enumerated
                                    // INT32  min(0) max(7) span(8) datatype(Int32)
                                    uint8_t* _tmp_300 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_300;
                                    __aux64__ += 0;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].z_angular_velocity[0].confidence.value = __aux64__;
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].z_angular_velocity[0].confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 7) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].z_angular_velocity[0].confidence.value' " << (__aux64__) << " exceeds max allowable (7); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000288") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].z_angular_velocity[0].confidence.value) << 
                                                     " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].z_angular_velocity[0].confidence.value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].z_angular_velocity[0].confidence.value);
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices.size() != 0) {
                                // Field name: lower_triangular_correlation_matrices
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(4) span(4)
                                int16_t* _tmp_301 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_301;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_301 = __aux64__;
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000289") << "| SequenceOf ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0]. size: " << int(__aux64__);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 4) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].value' " << (__aux64__) << " exceeds max allowable (4); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int l = 0; l < _if__tmp_301; l++) {
                                    its_container_v3_etsi_its_cdd_msgs::msg::LowerTriangularPositiveSemidefiniteMatrix seqof_l;  // SEQUENCE
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].elements.push_back(seqof_l);
                                
                                        // LowerTriangularPositiveSemidefiniteMatrix  SEQUENCE
                                            //  componentsIncludedIntheMatrix MatrixIncludedComponents                             
                                            //  matrix                        LowerTriangularPositiveSemidefiniteMatrixColumns     
                                        
                                        // Field name: components_included_inthe_matrix
                                        // BitString
                                        // BIT_STRING  min(13) max(13) span(1)
                                        uint8_t* _ext_flag_169 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].elements[l].components_included_inthe_matrix.
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000290") << "| Reading ext flag from ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].elements[l].components_included_inthe_matrix.: " << int(*_ext_flag_169);
                                        }
                                        
                                        uint8_t* _tmp_302 = (uint8_t*)buffer;
                                        __aux64__ = *_tmp_302 + 13;
                                        buffer += 1;
                                        
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000291") << "| payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].elements[l].components_included_inthe_matrix.value: " << __aux64__;
                                        
                                        int _if__tmp_302 = __aux64__;
                                        for(int m = 0; m < _if__tmp_302; m++) {
                                            uint8_t __c__;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].elements[l].components_included_inthe_matrix.values.push_back(__c__);
                                            uint8_t* __b__ = (uint8_t*)buffer++;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].elements[l].components_included_inthe_matrix.values[m] = (*__b__ == 1);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 13) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].elements[l].components_included_inthe_matrix.value' " << (__aux64__) << " is less than allowable (13); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 13) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].elements[l].components_included_inthe_matrix.value' " << (__aux64__) << " exceeds max allowable (13); message dropped.";
                                            return false;
                                        }
                                        
                                        // Field name: matrix
                                        // SequenceOf
                                        // Data Type UInt8
                                        // SEQUENCE_OF  min(1) max(13) span(13)
                                        int16_t* _tmp_303 = (int16_t*)buffer;
                                        buffer += 2;
                                        __aux64__ = *_tmp_303;
                                        __aux64__ += 1;     // +min
                                        
                                        int _if__tmp_303 = __aux64__;
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000292") << "| SequenceOf ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].elements[l].matrix. size: " << int(__aux64__);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].elements[l].matrix.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 13) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].elements[l].matrix.value' " << (__aux64__) << " exceeds max allowable (13); message dropped.";
                                            return false;
                                        }
                                        
                                        
                                        for(int n = 0; n < _if__tmp_303; n++) {
                                            its_container_v3_etsi_its_cdd_msgs::msg::CorrelationColumn seqof_n;  // SEQUENCE_OF
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].elements[l].matrix.elements.push_back(seqof_n);
                                        
                                            // SequenceOf
                                            // Data Type UInt8
                                            // SEQUENCE_OF  min(1) max(13) span(13)
                                            uint8_t* _ext_flag_170 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].elements[l].matrix.elements[n].
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000293") << "| Reading ext flag from ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].elements[l].matrix.elements[n].: " << int(*_ext_flag_170);
                                            }
                                            
                                            int16_t* _tmp_304 = (int16_t*)buffer;
                                            buffer += 2;
                                            __aux64__ = *_tmp_304;
                                            __aux64__ += 1;     // +min
                                            
                                            int _if__tmp_304 = __aux64__;
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000294") << "| SequenceOf ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].elements[l].matrix.elements[n]. size: " << int(__aux64__);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].elements[l].matrix.elements[n].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 13) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].elements[l].matrix.elements[n].value' " << (__aux64__) << " exceeds max allowable (13); message dropped.";
                                                return false;
                                            }
                                            
                                            
                                            for(int o = 0; o < _if__tmp_304; o++) {
                                                its_container_v3_etsi_its_cdd_msgs::msg::CorrelationCellValue seqof_o;  // INTEGER
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].elements[l].matrix.elements[n].elements.push_back(seqof_o);
                                            
                                                // Integer
                                                // INT8  min(-100) max(101) span(202) datatype(Int8)
                                                uint8_t* _tmp_305 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_305;
                                                __aux64__ += -100;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].elements[l].matrix.elements[n].elements[o].value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000295") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].elements[l].matrix.elements[n].elements[o].value) << 
                                                                 " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].elements[l].matrix.elements[n].elements[o].value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].elements[l].matrix.elements[n].elements[o].value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < -100) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].elements[l].matrix.elements[n].elements[o].value' " << (__aux64__) << " is less than allowable (-100); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 101) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].lower_triangular_correlation_matrices[0].elements[l].matrix.elements[n].elements[o].value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                            }
                                            
                                        }
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_z.size() != 0) {
                                // Field name: object_dimension_z
                                    // ObjectDimension  SEQUENCE
                                        //  value      ObjectDimensionValue          
                                        //  confidence ObjectDimensionConfidence     
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_306 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_z[0].value.value = *_tmp_306;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_z[0].value.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_z[0].value.value;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_z[0].value.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_z[0].value.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 256) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_z[0].value.value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000296") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_z[0].value.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_z[0].value: " <<
                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_z[0].value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_307 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_z[0].confidence.value = *_tmp_307;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_z[0].confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_z[0].confidence.value;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_z[0].confidence.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_z[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 32) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_z[0].confidence.value' " << (__aux64__) << " exceeds max allowable (32); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000297") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_z[0].confidence.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_z[0].confidence: " <<
                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_z[0].confidence.value << " (" << __aux64__ << ")";
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_y.size() != 0) {
                                // Field name: object_dimension_y
                                    // ObjectDimension  SEQUENCE
                                        //  value      ObjectDimensionValue          
                                        //  confidence ObjectDimensionConfidence     
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_308 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_y[0].value.value = *_tmp_308;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_y[0].value.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_y[0].value.value;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_y[0].value.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_y[0].value.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 256) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_y[0].value.value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000298") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_y[0].value.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_y[0].value: " <<
                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_y[0].value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_309 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_y[0].confidence.value = *_tmp_309;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_y[0].confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_y[0].confidence.value;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_y[0].confidence.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_y[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 32) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_y[0].confidence.value' " << (__aux64__) << " exceeds max allowable (32); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000299") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_y[0].confidence.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_y[0].confidence: " <<
                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_y[0].confidence.value << " (" << __aux64__ << ")";
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_x.size() != 0) {
                                // Field name: object_dimension_x
                                    // ObjectDimension  SEQUENCE
                                        //  value      ObjectDimensionValue          
                                        //  confidence ObjectDimensionConfidence     
                                    
                                    // Field name: value
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(256) span(256) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_310 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_x[0].value.value = *_tmp_310;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_x[0].value.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_x[0].value.value;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_x[0].value.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_x[0].value.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 256) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_x[0].value.value' " << (__aux64__) << " exceeds max allowable (256); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000300") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_x[0].value.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_x[0].value: " <<
                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_x[0].value.value << " (" << __aux64__ << ")";
                                    }
                                    
                                    // Field name: confidence
                                    // Real
                                    // Float
                                    // FLOAT  min(1) max(32) span(32) scaleDivisor(10.0) dataType(Float)
                                    uint8_t* _tmp_311 = (uint8_t*) buffer++;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_x[0].confidence.value = *_tmp_311;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_x[0].confidence.value += 1;
                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_x[0].confidence.value;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_x[0].confidence.value /= 10.0;
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_x[0].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 32) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_x[0].confidence.value' " << (__aux64__) << " exceeds max allowable (32); message dropped.";
                                        return false;
                                    }
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000301") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_x[0].confidence.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_x[0].confidence: " <<
                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_dimension_x[0].confidence.value << " (" << __aux64__ << ")";
                                    }
                            }
                            
                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_age.size() != 0) {
                                // Field name: object_age
                                // Real
                                // Float
                                // FLOAT  min(0) max(2047) span(2048) scaleDivisor(1000.0) dataType(Float)
                                uint16_t* _tmp_312 = (uint16_t*) buffer; buffer += 2;
                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_age[0].value = *_tmp_312;
                                __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_age[0].value;
                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_age[0].value /= 1000.0;
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_age[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 2047) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_age[0].value' " << (__aux64__) << " exceeds max allowable (2047); message dropped.";
                                    return false;
                                }
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000302") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_age[0].value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_age[0]: " <<
                                                 ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_age[0].value << " (" << __aux64__ << ")";
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_perception_quality.size() != 0) {
                                // Field name: object_perception_quality
                                // Integer
                                // UINT8  min(0) max(15) span(16) datatype(UInt8)
                                uint8_t* _tmp_313 = (uint8_t*) buffer++;
                                __aux64__ = *_tmp_313;
                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_perception_quality[0].value = __aux64__;
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000303") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_perception_quality[0].value) << 
                                                 " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_perception_quality[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_perception_quality[0].value);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_perception_quality[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].object_perception_quality[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                    return false;
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].sensor_id_list.size() != 0) {
                                // Field name: sensor_id_list
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(128) span(128)
                                uint8_t* _ext_flag_178 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].sensor_id_list[0].
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000304") << "| Reading ext flag from ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].sensor_id_list[0].: " << int(*_ext_flag_178);
                                }
                                
                                int16_t* _tmp_314 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_314;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_314 = __aux64__;
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000305") << "| SequenceOf ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].sensor_id_list[0]. size: " << int(__aux64__);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].sensor_id_list[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 128) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].sensor_id_list[0].value' " << (__aux64__) << " exceeds max allowable (128); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int p = 0; p < _if__tmp_314; p++) {
                                    its_container_v3_etsi_its_cdd_msgs::msg::Identifier1B seqof_p;  // INTEGER
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].sensor_id_list[0].elements.push_back(seqof_p);
                                
                                    // Integer
                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                    uint8_t* _tmp_315 = (uint8_t*) buffer++;
                                    __aux64__ = *_tmp_315;
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].sensor_id_list[0].elements[p].value = __aux64__;
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000306") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].sensor_id_list[0].elements[p].value) << 
                                                     " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].sensor_id_list[0].elements[p].value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].sensor_id_list[0].elements[p].value);
                                    }
                                    
                                    // ******************* MIN validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].sensor_id_list[0].elements[p].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                        return false;
                                    }
                                    // ******************* MAX validator *******************
                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].sensor_id_list[0].elements[p].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                        return false;
                                    }
                                    
                                    
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification.size() != 0) {
                                // Field name: classification
                                // SequenceOf
                                // Data Type UInt8
                                // SEQUENCE_OF  min(1) max(8) span(8)
                                int16_t* _tmp_316 = (int16_t*)buffer;
                                buffer += 2;
                                __aux64__ = *_tmp_316;
                                __aux64__ += 1;     // +min
                                
                                int _if__tmp_316 = __aux64__;
                                
                                if(debug) {
                                    logger->print() << "|" << tools::brown("000307") << "| SequenceOf ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0]. size: " << int(__aux64__);
                                }
                                
                                // ******************* MIN validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                    return false;
                                }
                                // ******************* MAX validator *******************
                                if(VALIDATORS_ENABLED && __aux64__ > 8) {
                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].value' " << (__aux64__) << " exceeds max allowable (8); message dropped.";
                                    return false;
                                }
                                
                                
                                for(int q = 0; q < _if__tmp_316; q++) {
                                    its_container_v3_etsi_its_cdd_msgs::msg::ObjectClassWithConfidence seqof_q;  // SEQUENCE
                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements.push_back(seqof_q);
                                
                                        // ObjectClassWithConfidence  SEQUENCE
                                            //  objectClass ObjectClass         
                                            //  confidence  ConfidenceLevel     
                                        
                                        // Field name: object_class
                                        // Choice
                                        uint8_t* _ext_flag_179 = (uint8_t*)buffer++; // ext flag
                                        
                                           // #0  vehicleSubClass   TrafficParticipantType   
                                           // #1  vruSubClass   VruProfileAndSubprofile   
                                           // #2  groupSubClass   VruClusterInformation   
                                           // #3  otherSubClass   OtherSubClass   
                                        uint8_t _choice_7 = *(buffer++);
                                        
                                        if(*_ext_flag_179)
                                            _choice_7 += 3 + 1; // Ext addition
                                        
                                        if(_choice_7 == 0) {
                                            its_container_v3_etsi_its_cdd_msgs::msg::TrafficParticipantType _tmp_317;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vehicle_sub_class.push_back(_tmp_317);
                                        
                                            // Integer
                                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                            uint8_t* _tmp_318 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_318;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vehicle_sub_class[0].value = __aux64__;
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000308") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vehicle_sub_class[0].value) << 
                                                             " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vehicle_sub_class[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vehicle_sub_class[0].value);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vehicle_sub_class[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vehicle_sub_class[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                return false;
                                            }
                                        }
                                        else if(_choice_7 == 1)  // CHOICE ObjectClass  fieldName(vru_sub_class)
                                        {
                                            its_container_v3_etsi_its_cdd_msgs::msg::VruProfileAndSubprofile _tmp_319;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class.push_back(_tmp_319);
                                        
                                            // Choice
                                            uint8_t* _ext_flag_180 = (uint8_t*)buffer++; // ext flag
                                            
                                               // #0  pedestrian   VruSubProfilePedestrian   
                                               // #1  bicyclistAndLightVruVehicle   VruSubProfileBicyclist   
                                               // #2  motorcyclist   VruSubProfileMotorcyclist   
                                               // #3  animal   VruSubProfileAnimal   
                                            uint8_t _choice_8 = *(buffer++);
                                            
                                            if(*_ext_flag_180)
                                                _choice_8 += 3 + 1; // Ext addition
                                            
                                            if(_choice_8 == 0) {
                                                its_container_v3_etsi_its_cdd_msgs::msg::VruSubProfilePedestrian _tmp_320;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].pedestrian.push_back(_tmp_320);
                                            
                                                // Enumerated
                                                // INT32  min(0) max(15) span(16) datatype(Int32)
                                                uint8_t* _tmp_321 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_321;
                                                __aux64__ += 0;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].pedestrian[0].value = __aux64__;
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].pedestrian[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].pedestrian[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000309") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].pedestrian[0].value) << 
                                                                 " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].pedestrian[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].pedestrian[0].value);
                                                }
                                            }
                                            else if(_choice_8 == 1)  // CHOICE VruProfileAndSubprofile  fieldName(bicyclist_and_light_vru_vehicle)
                                            {
                                                its_container_v3_etsi_its_cdd_msgs::msg::VruSubProfileBicyclist _tmp_322;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle.push_back(_tmp_322);
                                            
                                                // Enumerated
                                                // INT32  min(0) max(15) span(16) datatype(Int32)
                                                uint8_t* _tmp_323 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_323;
                                                __aux64__ += 0;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value = __aux64__;
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000310") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value) << 
                                                                 " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].bicyclist_and_light_vru_vehicle[0].value);
                                                }
                                            }
                                            else if(_choice_8 == 2)  // CHOICE VruProfileAndSubprofile  fieldName(motorcyclist)
                                            {
                                                its_container_v3_etsi_its_cdd_msgs::msg::VruSubProfileMotorcyclist _tmp_324;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].motorcyclist.push_back(_tmp_324);
                                            
                                                // Enumerated
                                                // INT32  min(0) max(15) span(16) datatype(Int32)
                                                uint8_t* _tmp_325 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_325;
                                                __aux64__ += 0;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].motorcyclist[0].value = __aux64__;
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].motorcyclist[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].motorcyclist[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000311") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].motorcyclist[0].value) << 
                                                                 " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].motorcyclist[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].motorcyclist[0].value);
                                                }
                                            }
                                            else if(_choice_8 == 3)  // CHOICE VruProfileAndSubprofile  fieldName(animal)
                                            {
                                                its_container_v3_etsi_its_cdd_msgs::msg::VruSubProfileAnimal _tmp_326;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].animal.push_back(_tmp_326);
                                            
                                                // Enumerated
                                                // INT32  min(0) max(15) span(16) datatype(Int32)
                                                uint8_t* _tmp_327 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_327;
                                                __aux64__ += 0;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].animal[0].value = __aux64__;
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].animal[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 15) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].animal[0].value' " << (__aux64__) << " exceeds max allowable (15); message dropped.";
                                                    return false;
                                                }
                                                
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000312") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].animal[0].value) << 
                                                                 " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].animal[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.vru_sub_class[0].animal[0].value);
                                                }
                                            }
                                            else
                                            {
                                                uint16_t* _tmp_328 = (uint16_t*)buffer;  // OpenType length
                                                buffer += 2 + int(*_tmp_328);            // Ignoring opentype data
                                            }
                                        }
                                        else if(_choice_7 == 2)  // CHOICE ObjectClass  fieldName(group_sub_class)
                                        {
                                            its_container_v3_etsi_its_cdd_msgs::msg::VruClusterInformation _tmp_329;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class.push_back(_tmp_329);
                                        
                                                // VruClusterInformation  SEQUENCE
                                                    //  clusterId               Identifier1B         OPTIONAL  
                                                    //  clusterBoundingBoxShape Shape                OPTIONAL  
                                                    //  clusterCardinalitySize  CardinalNumber1B       
                                                    //  clusterProfiles         VruClusterProfiles   OPTIONAL  
                                                    //  ...
                                                uint8_t* _ext_flag_185 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000313") << "| Reading ext flag from ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].: " << int(*_ext_flag_185);
                                                }
                                                
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::msg::Identifier1B _tmp_330;
                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_id.push_back(_tmp_330);
                                                
                                                    if(debug)
                                                        logger->print() << "|" << tools::brown("000314") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_id " << tools::green("present");
                                                }
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::msg::Shape _tmp_331;
                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape.push_back(_tmp_331);
                                                
                                                    if(debug)
                                                        logger->print() << "|" << tools::brown("000315") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape " << tools::green("present");
                                                }
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::msg::VruClusterProfiles _tmp_332;
                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_profiles.push_back(_tmp_332);
                                                
                                                    if(debug)
                                                        logger->print() << "|" << tools::brown("000316") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_profiles " << tools::green("present");
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_id.size() != 0) {
                                                    // Field name: cluster_id
                                                    // Integer
                                                    // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                    uint8_t* _tmp_333 = (uint8_t*) buffer++;
                                                    __aux64__ = *_tmp_333;
                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_id[0].value = __aux64__;
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000317") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_id[0].value) << 
                                                                     " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_id[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_id[0].value);
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_id[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                        return false;
                                                    }
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape.size() != 0) {
                                                    // Field name: cluster_bounding_box_shape
                                                    // Choice
                                                    uint8_t* _ext_flag_186 = (uint8_t*)buffer++; // ext flag
                                                    
                                                       // #0  rectangular   RectangularShape   
                                                       // #1  circular   CircularShape   
                                                       // #2  polygonal   PolygonalShape   
                                                       // #3  elliptical   EllipticalShape   
                                                       // #4  radial   RadialShape   
                                                       // #5  radialShapes   RadialShapes   
                                                    uint8_t _choice_9 = *(buffer++);
                                                    
                                                    if(*_ext_flag_186)
                                                        _choice_9 += 5 + 1; // Ext addition
                                                    
                                                    if(_choice_9 == 0) {
                                                        its_container_v3_etsi_its_cdd_msgs::msg::RectangularShape _tmp_334;
                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular.push_back(_tmp_334);
                                                    
                                                            // RectangularShape  SEQUENCE
                                                                //  centerPoint CartesianPosition3d   OPTIONAL  
                                                                //  semiLength  StandardLength12b       
                                                                //  semiBreadth StandardLength12b       
                                                                //  orientation Wgs84AngleValue       OPTIONAL  
                                                                //  height      StandardLength12b     OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_335;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point.push_back(_tmp_335);
                                                            
                                                                if(debug)
                                                                    logger->print() << "|" << tools::brown("000318") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::Wgs84AngleValue _tmp_336;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation.push_back(_tmp_336);
                                                            
                                                                if(debug)
                                                                    logger->print() << "|" << tools::brown("000319") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_337;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height.push_back(_tmp_337);
                                                            
                                                                if(debug)
                                                                    logger->print() << "|" << tools::brown("000320") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point.size() != 0) {
                                                                // Field name: center_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_338;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate.push_back(_tmp_338);
                                                                    
                                                                        if(debug)
                                                                            logger->print() << "|" << tools::brown("000321") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_339 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value = *_tmp_339;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("000322") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_340 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value = *_tmp_340;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("000323") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_341 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value = *_tmp_341;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->print() << "|" << tools::brown("000324") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].center_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: semi_length
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_342 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value = *_tmp_342;
                                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value;
                                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("000325") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length: " <<
                                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_length.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: semi_breadth
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_343 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value = *_tmp_343;
                                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value;
                                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("000326") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth: " <<
                                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].semi_breadth.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation.size() != 0) {
                                                                // Field name: orientation
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_344 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value = *_tmp_344;
                                                                __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->print() << "|" << tools::brown("000327") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].orientation[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height.size() != 0) {
                                                                // Field name: height
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_345 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value = *_tmp_345;
                                                                __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->print() << "|" << tools::brown("000328") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].rectangular[0].height[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_9 == 1)  // CHOICE Shape  fieldName(circular)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::msg::CircularShape _tmp_346;
                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular.push_back(_tmp_346);
                                                    
                                                            // CircularShape  SEQUENCE
                                                                //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                                                //  radius              StandardLength12b       
                                                                //  height              StandardLength12b     OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_347;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point.push_back(_tmp_347);
                                                            
                                                                if(debug)
                                                                    logger->print() << "|" << tools::brown("000329") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_348;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height.push_back(_tmp_348);
                                                            
                                                                if(debug)
                                                                    logger->print() << "|" << tools::brown("000330") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point.size() != 0) {
                                                                // Field name: shape_reference_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_349;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate.push_back(_tmp_349);
                                                                    
                                                                        if(debug)
                                                                            logger->print() << "|" << tools::brown("000331") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_350 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value = *_tmp_350;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("000332") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_351 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value = *_tmp_351;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("000333") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_352 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_352;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->print() << "|" << tools::brown("000334") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: radius
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_353 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value = *_tmp_353;
                                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value;
                                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("000335") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius: " <<
                                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].radius.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height.size() != 0) {
                                                                // Field name: height
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_354 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value = *_tmp_354;
                                                                __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->print() << "|" << tools::brown("000336") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].circular[0].height[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_9 == 2)  // CHOICE Shape  fieldName(polygonal)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::msg::PolygonalShape _tmp_355;
                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal.push_back(_tmp_355);
                                                    
                                                            // PolygonalShape  SEQUENCE
                                                                //  shapeReferencePoint CartesianPosition3d             OPTIONAL  
                                                                //  polygon             SequenceOfCartesianPosition3d     
                                                                //  height              StandardLength12b               OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_356;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point.push_back(_tmp_356);
                                                            
                                                                if(debug)
                                                                    logger->print() << "|" << tools::brown("000337") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_357;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height.push_back(_tmp_357);
                                                            
                                                                if(debug)
                                                                    logger->print() << "|" << tools::brown("000338") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point.size() != 0) {
                                                                // Field name: shape_reference_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_358;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.push_back(_tmp_358);
                                                                    
                                                                        if(debug)
                                                                            logger->print() << "|" << tools::brown("000339") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_359 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value = *_tmp_359;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("000340") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_360 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value = *_tmp_360;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("000341") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_361 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_361;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->print() << "|" << tools::brown("000342") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: polygon
                                                            // SequenceOf
                                                            // Data Type UInt8
                                                            // SEQUENCE_OF  min(1) max(16) span(16)
                                                            uint8_t* _ext_flag_202 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.
                                                            
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("000343") << "| Reading ext flag from ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.: " << int(*_ext_flag_202);
                                                            }
                                                            
                                                            int16_t* _tmp_362 = (int16_t*)buffer;
                                                            buffer += 2;
                                                            __aux64__ = *_tmp_362;
                                                            __aux64__ += 1;     // +min
                                                            
                                                            int _if__tmp_362 = __aux64__;
                                                            
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("000344") << "| SequenceOf ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon. size: " << int(__aux64__);
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            
                                                            for(int r = 0; r < _if__tmp_362; r++) {
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d seqof_r;  // SEQUENCE
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements.push_back(seqof_r);
                                                            
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_363;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].z_coordinate.push_back(_tmp_363);
                                                                    
                                                                        if(debug)
                                                                            logger->print() << "|" << tools::brown("000345") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_364 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].x_coordinate.value = *_tmp_364;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("000346") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].x_coordinate.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_365 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].y_coordinate.value = *_tmp_365;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("000347") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].y_coordinate.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_366 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].z_coordinate[0].value = *_tmp_366;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->print() << "|" << tools::brown("000348") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].z_coordinate[0].value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].polygon.elements[r].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height.size() != 0) {
                                                                // Field name: height
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_367 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value = *_tmp_367;
                                                                __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->print() << "|" << tools::brown("000349") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].polygonal[0].height[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_9 == 3)  // CHOICE Shape  fieldName(elliptical)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::msg::EllipticalShape _tmp_368;
                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical.push_back(_tmp_368);
                                                    
                                                            // EllipticalShape  SEQUENCE
                                                                //  shapeReferencePoint CartesianPosition3d   OPTIONAL  
                                                                //  semiMajorAxisLength StandardLength12b       
                                                                //  semiMinorAxisLength StandardLength12b       
                                                                //  orientation         Wgs84AngleValue       OPTIONAL  
                                                                //  height              StandardLength12b     OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_369;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point.push_back(_tmp_369);
                                                            
                                                                if(debug)
                                                                    logger->print() << "|" << tools::brown("000350") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::Wgs84AngleValue _tmp_370;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation.push_back(_tmp_370);
                                                            
                                                                if(debug)
                                                                    logger->print() << "|" << tools::brown("000351") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::StandardLength12b _tmp_371;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height.push_back(_tmp_371);
                                                            
                                                                if(debug)
                                                                    logger->print() << "|" << tools::brown("000352") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point.size() != 0) {
                                                                // Field name: shape_reference_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_372;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.push_back(_tmp_372);
                                                                    
                                                                        if(debug)
                                                                            logger->print() << "|" << tools::brown("000353") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_373 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value = *_tmp_373;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("000354") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_374 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value = *_tmp_374;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("000355") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_375 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_375;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->print() << "|" << tools::brown("000356") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: semi_major_axis_length
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_376 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value = *_tmp_376;
                                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value;
                                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("000357") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length: " <<
                                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_major_axis_length.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: semi_minor_axis_length
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_377 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value = *_tmp_377;
                                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value;
                                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("000358") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length: " <<
                                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].semi_minor_axis_length.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation.size() != 0) {
                                                                // Field name: orientation
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_378 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value = *_tmp_378;
                                                                __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->print() << "|" << tools::brown("000359") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].orientation[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height.size() != 0) {
                                                                // Field name: height
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_379 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value = *_tmp_379;
                                                                __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->print() << "|" << tools::brown("000360") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].elliptical[0].height[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_9 == 4)  // CHOICE Shape  fieldName(radial)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::msg::RadialShape _tmp_380;
                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial.push_back(_tmp_380);
                                                    
                                                            // RadialShape  SEQUENCE
                                                                //  shapeReferencePoint                   CartesianPosition3d   OPTIONAL  
                                                                //  range                                 StandardLength12b       
                                                                //  stationaryHorizontalOpeningAngleStart Wgs84AngleValue         
                                                                //  stationaryHorizontalOpeningAngleEnd   Wgs84AngleValue         
                                                                //  verticalOpeningAngleStart             CartesianAngleValue   OPTIONAL  
                                                                //  verticalOpeningAngleEnd               CartesianAngleValue   OPTIONAL  
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianPosition3d _tmp_381;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point.push_back(_tmp_381);
                                                            
                                                                if(debug)
                                                                    logger->print() << "|" << tools::brown("000361") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_382;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start.push_back(_tmp_382);
                                                            
                                                                if(debug)
                                                                    logger->print() << "|" << tools::brown("000362") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start " << tools::green("present");
                                                            }
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_383;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end.push_back(_tmp_383);
                                                            
                                                                if(debug)
                                                                    logger->print() << "|" << tools::brown("000363") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end " << tools::green("present");
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point.size() != 0) {
                                                                // Field name: shape_reference_point
                                                                    // CartesianPosition3d  SEQUENCE
                                                                        //  xCoordinate CartesianCoordinate     
                                                                        //  yCoordinate CartesianCoordinate     
                                                                        //  zCoordinate CartesianCoordinate   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinate _tmp_384;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate.push_back(_tmp_384);
                                                                    
                                                                        if(debug)
                                                                            logger->print() << "|" << tools::brown("000364") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: x_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_385 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value = *_tmp_385;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("000365") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: y_coordinate
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                    uint16_t* _tmp_386 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value = *_tmp_386;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value += -32768;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value /= 100.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("000366") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate: " <<
                                                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate.size() != 0) {
                                                                        // Field name: z_coordinate
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(-32768) max(32767) span(65536) scaleDivisor(100.0) dataType(Float)
                                                                        uint16_t* _tmp_387 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value = *_tmp_387;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value += -32768;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value /= 100.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < -32768) {
                                                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-32768); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->print() << "|" << tools::brown("000367") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].shape_reference_point[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                            
                                                            // Field name: range
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_388 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value = *_tmp_388;
                                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value;
                                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("000368") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range: " <<
                                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].range.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: stationary_horizontal_opening_angle_start
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_389 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value = *_tmp_389;
                                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value;
                                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("000369") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start: " <<
                                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: stationary_horizontal_opening_angle_end
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                            uint16_t* _tmp_390 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value = *_tmp_390;
                                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value;
                                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value /= 10.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("000370") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end: " <<
                                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].stationary_horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start.size() != 0) {
                                                                // Field name: vertical_opening_angle_start
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_391 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value = *_tmp_391;
                                                                __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->print() << "|" << tools::brown("000371") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end.size() != 0) {
                                                                // Field name: vertical_opening_angle_end
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                uint16_t* _tmp_392 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value = *_tmp_392;
                                                                __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value /= 10.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->print() << "|" << tools::brown("000372") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial[0].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                    }
                                                    else if(_choice_9 == 5)  // CHOICE Shape  fieldName(radial_shapes)
                                                    {
                                                        its_container_v3_etsi_its_cdd_msgs::msg::RadialShapes _tmp_393;
                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes.push_back(_tmp_393);
                                                    
                                                            // RadialShapes  SEQUENCE
                                                                //  refPointId       Identifier1B                 
                                                                //  xCoordinate      CartesianCoordinateSmall     
                                                                //  yCoordinate      CartesianCoordinateSmall     
                                                                //  zCoordinate      CartesianCoordinateSmall   OPTIONAL  
                                                                //  radialShapesList RadialShapesList             
                                                            if(*(buffer++)) { 
                                                                its_container_v3_etsi_its_cdd_msgs::msg::CartesianCoordinateSmall _tmp_394;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate.push_back(_tmp_394);
                                                            
                                                                if(debug)
                                                                    logger->print() << "|" << tools::brown("000373") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate " << tools::green("present");
                                                            }
                                                            
                                                            // Field name: ref_point_id
                                                            // Integer
                                                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                            uint8_t* _tmp_395 = (uint8_t*) buffer++;
                                                            __aux64__ = *_tmp_395;
                                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value = __aux64__;
                                                            
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("000374") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value) << 
                                                                             " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value);
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].ref_point_id.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            // Field name: x_coordinate
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                            uint16_t* _tmp_396 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value = *_tmp_396;
                                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value += -3094;
                                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value;
                                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value /= 100.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("000375") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate: " <<
                                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].x_coordinate.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            // Field name: y_coordinate
                                                            // Real
                                                            // Float
                                                            // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                            uint16_t* _tmp_397 = (uint16_t*) buffer; buffer += 2;
                                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value = *_tmp_397;
                                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value += -3094;
                                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value;
                                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value /= 100.0;
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("000376") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate: " <<
                                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].y_coordinate.value << " (" << __aux64__ << ")";
                                                            }
                                                            
                                                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate.size() != 0) {
                                                                // Field name: z_coordinate
                                                                // Real
                                                                // Float
                                                                // FLOAT  min(-3094) max(1001) span(4096) scaleDivisor(100.0) dataType(Float)
                                                                uint16_t* _tmp_398 = (uint16_t*) buffer; buffer += 2;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value = *_tmp_398;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value += -3094;
                                                                __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value;
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value /= 100.0;
                                                                
                                                                // ******************* MIN validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ < -3094) {
                                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " is less than allowable (-3094); message dropped.";
                                                                    return false;
                                                                }
                                                                // ******************* MAX validator *******************
                                                                if(VALIDATORS_ENABLED && __aux64__ > 1001) {
                                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value' " << (__aux64__) << " exceeds max allowable (1001); message dropped.";
                                                                    return false;
                                                                }
                                                                
                                                                if(debug) {
                                                                    logger->print() << "|" << tools::brown("000377") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0]: " <<
                                                                                 ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].z_coordinate[0].value << " (" << __aux64__ << ")";
                                                                }
                                                            }
                                                            
                                                            // Field name: radial_shapes_list
                                                            // SequenceOf
                                                            // Data Type UInt8
                                                            // SEQUENCE_OF  min(1) max(16) span(16)
                                                            uint8_t* _ext_flag_225 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.
                                                            
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("000378") << "| Reading ext flag from ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.: " << int(*_ext_flag_225);
                                                            }
                                                            
                                                            int16_t* _tmp_399 = (int16_t*)buffer;
                                                            buffer += 2;
                                                            __aux64__ = *_tmp_399;
                                                            __aux64__ += 1;     // +min
                                                            
                                                            int _if__tmp_399 = __aux64__;
                                                            
                                                            if(debug) {
                                                                logger->print() << "|" << tools::brown("000379") << "| SequenceOf ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list. size: " << int(__aux64__);
                                                            }
                                                            
                                                            // ******************* MIN validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                                                return false;
                                                            }
                                                            // ******************* MAX validator *******************
                                                            if(VALIDATORS_ENABLED && __aux64__ > 16) {
                                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.value' " << (__aux64__) << " exceeds max allowable (16); message dropped.";
                                                                return false;
                                                            }
                                                            
                                                            
                                                            for(int s = 0; s < _if__tmp_399; s++) {
                                                                its_container_v3_etsi_its_cdd_msgs::msg::RadialShapeDetails seqof_s;  // SEQUENCE
                                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements.push_back(seqof_s);
                                                            
                                                                    // RadialShapeDetails  SEQUENCE
                                                                        //  range                       StandardLength12b       
                                                                        //  horizontalOpeningAngleStart CartesianAngleValue     
                                                                        //  horizontalOpeningAngleEnd   CartesianAngleValue     
                                                                        //  verticalOpeningAngleStart   CartesianAngleValue   OPTIONAL  
                                                                        //  verticalOpeningAngleEnd     CartesianAngleValue   OPTIONAL  
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_400;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].vertical_opening_angle_start.push_back(_tmp_400);
                                                                    
                                                                        if(debug)
                                                                            logger->print() << "|" << tools::brown("000380") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].vertical_opening_angle_start " << tools::green("present");
                                                                    }
                                                                    if(*(buffer++)) { 
                                                                        its_container_v3_etsi_its_cdd_msgs::msg::CartesianAngleValue _tmp_401;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].vertical_opening_angle_end.push_back(_tmp_401);
                                                                    
                                                                        if(debug)
                                                                            logger->print() << "|" << tools::brown("000381") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].vertical_opening_angle_end " << tools::green("present");
                                                                    }
                                                                    
                                                                    // Field name: range
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(0) max(4095) span(4096) scaleDivisor(10.0) dataType(Float)
                                                                    uint16_t* _tmp_402 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].range.value = *_tmp_402;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].range.value;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].range.value /= 10.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].range.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 4095) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].range.value' " << (__aux64__) << " exceeds max allowable (4095); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("000382") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].range.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].range: " <<
                                                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].range.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: horizontal_opening_angle_start
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                    uint16_t* _tmp_403 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].horizontal_opening_angle_start.value = *_tmp_403;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].horizontal_opening_angle_start.value;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].horizontal_opening_angle_start.value /= 10.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].horizontal_opening_angle_start.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].horizontal_opening_angle_start.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("000383") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].horizontal_opening_angle_start.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].horizontal_opening_angle_start: " <<
                                                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].horizontal_opening_angle_start.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    // Field name: horizontal_opening_angle_end
                                                                    // Real
                                                                    // Float
                                                                    // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                    uint16_t* _tmp_404 = (uint16_t*) buffer; buffer += 2;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].horizontal_opening_angle_end.value = *_tmp_404;
                                                                    __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].horizontal_opening_angle_end.value;
                                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].horizontal_opening_angle_end.value /= 10.0;
                                                                    
                                                                    // ******************* MIN validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].horizontal_opening_angle_end.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                        return false;
                                                                    }
                                                                    // ******************* MAX validator *******************
                                                                    if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].horizontal_opening_angle_end.value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                        return false;
                                                                    }
                                                                    
                                                                    if(debug) {
                                                                        logger->print() << "|" << tools::brown("000384") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].horizontal_opening_angle_end.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].horizontal_opening_angle_end: " <<
                                                                                     ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].horizontal_opening_angle_end.value << " (" << __aux64__ << ")";
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].vertical_opening_angle_start.size() != 0) {
                                                                        // Field name: vertical_opening_angle_start
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                        uint16_t* _tmp_405 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].vertical_opening_angle_start[0].value = *_tmp_405;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].vertical_opening_angle_start[0].value;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].vertical_opening_angle_start[0].value /= 10.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].vertical_opening_angle_start[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].vertical_opening_angle_start[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->print() << "|" << tools::brown("000385") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].vertical_opening_angle_start[0].value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].vertical_opening_angle_start[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].vertical_opening_angle_start[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                                    
                                                                    if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].vertical_opening_angle_end.size() != 0) {
                                                                        // Field name: vertical_opening_angle_end
                                                                        // Real
                                                                        // Float
                                                                        // FLOAT  min(0) max(3601) span(3602) scaleDivisor(10.0) dataType(Float)
                                                                        uint16_t* _tmp_406 = (uint16_t*) buffer; buffer += 2;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].vertical_opening_angle_end[0].value = *_tmp_406;
                                                                        __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].vertical_opening_angle_end[0].value;
                                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].vertical_opening_angle_end[0].value /= 10.0;
                                                                        
                                                                        // ******************* MIN validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].vertical_opening_angle_end[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                                            return false;
                                                                        }
                                                                        // ******************* MAX validator *******************
                                                                        if(VALIDATORS_ENABLED && __aux64__ > 3601) {
                                                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].vertical_opening_angle_end[0].value' " << (__aux64__) << " exceeds max allowable (3601); message dropped.";
                                                                            return false;
                                                                        }
                                                                        
                                                                        if(debug) {
                                                                            logger->print() << "|" << tools::brown("000386") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].vertical_opening_angle_end[0].value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].vertical_opening_angle_end[0]: " <<
                                                                                         ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_bounding_box_shape[0].radial_shapes[0].radial_shapes_list.elements[s].vertical_opening_angle_end[0].value << " (" << __aux64__ << ")";
                                                                        }
                                                                    }
                                                            }
                                                    }
                                                    else
                                                    {
                                                        uint16_t* _tmp_407 = (uint16_t*)buffer;  // OpenType length
                                                        buffer += 2 + int(*_tmp_407);            // Ignoring opentype data
                                                    }
                                                }
                                                
                                                // Field name: cluster_cardinality_size
                                                // Integer
                                                // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                                uint8_t* _tmp_408 = (uint8_t*) buffer++;
                                                __aux64__ = *_tmp_408;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_cardinality_size.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000387") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_cardinality_size.value) << 
                                                                 " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_cardinality_size.value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_cardinality_size.value);
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_cardinality_size.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_cardinality_size.value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                    return false;
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_profiles.size() != 0) {
                                                    // Field name: cluster_profiles
                                                    // BitString
                                                    // BIT_STRING  min(4) max(4) span(1)
                                                    uint8_t* _tmp_409 = (uint8_t*)buffer;
                                                    __aux64__ = *_tmp_409 + 4;
                                                    buffer += 1;
                                                    
                                                    if(debug)
                                                        logger->print() << "|" << tools::brown("000388") << "| payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_profiles[0].value: " << __aux64__;
                                                    
                                                    int _if__tmp_409 = __aux64__;
                                                    for(int t = 0; t < _if__tmp_409; t++) {
                                                        uint8_t __c__;
                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_profiles[0].values.push_back(__c__);
                                                        uint8_t* __b__ = (uint8_t*)buffer++;
                                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_profiles[0].values[t] = (*__b__ == 1);
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 4) {
                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_profiles[0].value' " << (__aux64__) << " is less than allowable (4); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 4) {
                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].cluster_profiles[0].value' " << (__aux64__) << " exceeds max allowable (4); message dropped.";
                                                        return false;
                                                    }
                                                }
                                                if(*_ext_flag_185) { // from ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0]. 
                                                    uint8_t* _tmp_410 = (uint8_t*) buffer++;  // number of extensions
                                                    bool _array_7[*_tmp_410];
                                                    
                                                    if(debug)
                                                        logger->print() << "|" << tools::brown("000389") << "| Reading number of exts from ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.group_sub_class[0].: " << static_cast<unsigned int>(*_tmp_410);
                                                    
                                                    // Extensions bytemap
                                                    for(int i = 0; i < *_tmp_410; i++)
                                                        _array_7[i] = (*buffer++) != 0;
                                                    
                                                    // Discarding unknown OpenType containers
                                                    for(int i = 0; i < *_tmp_410; i++) {
                                                        uint16_t* _tmp_411 = (uint16_t*)buffer;  // OpenType length
                                                        buffer += 2;
                                                    
                                                        if(debug) {
                                                        }
                                                    
                                                        for(int i = 0; i < *_tmp_411; i++)
                                                            buffer++;
                                                    }
                                                    
                                                }
                                        }
                                        else if(_choice_7 == 3)  // CHOICE ObjectClass  fieldName(other_sub_class)
                                        {
                                            its_container_v3_etsi_its_cdd_msgs::msg::OtherSubClass _tmp_412;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.other_sub_class.push_back(_tmp_412);
                                        
                                            // Integer
                                            // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                            uint8_t* _tmp_413 = (uint8_t*) buffer++;
                                            __aux64__ = *_tmp_413;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.other_sub_class[0].value = __aux64__;
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000390") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.other_sub_class[0].value) << 
                                                             " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.other_sub_class[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.other_sub_class[0].value);
                                            }
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.other_sub_class[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].object_class.other_sub_class[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                                return false;
                                            }
                                        }
                                        else
                                        {
                                            uint16_t* _tmp_414 = (uint16_t*)buffer;  // OpenType length
                                            buffer += 2 + int(*_tmp_414);            // Ignoring opentype data
                                        }
                                        
                                        // Field name: confidence
                                        // Integer
                                        // UINT8  min(1) max(101) span(101) datatype(UInt8)
                                        uint8_t* _tmp_415 = (uint8_t*) buffer++;
                                        __aux64__ = *_tmp_415;
                                        __aux64__ += 1;
                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].confidence.value = __aux64__;
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000391") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].confidence.value) << 
                                                         " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].confidence.value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].confidence.value);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 1) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].confidence.value' " << (__aux64__) << " is less than allowable (1); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 101) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].classification[0].elements[q].confidence.value' " << (__aux64__) << " exceeds max allowable (101); message dropped.";
                                            return false;
                                        }
                                }
                            }
                            
                            if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position.size() != 0) {
                                // Field name: map_position
                                    // MapPosition  SEQUENCE
                                        //  mapReference             MapReference               OPTIONAL  
                                        //  laneId                   Identifier1B               OPTIONAL  
                                        //  connectionId             Identifier1B               OPTIONAL  
                                        //  longitudinalLanePosition LongitudinalLanePosition   OPTIONAL  
                                        //  ...
                                    uint8_t* _ext_flag_231 = (uint8_t*) buffer++;  // Read ext flag from ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].
                                    
                                    if(debug) {
                                        logger->print() << "|" << tools::brown("000392") << "| Reading ext flag from ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].: " << int(*_ext_flag_231);
                                    }
                                    
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::MapReference _tmp_416;
                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference.push_back(_tmp_416);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000393") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::Identifier1B _tmp_417;
                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].lane_id.push_back(_tmp_417);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000394") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].lane_id " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::Identifier1B _tmp_418;
                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].connection_id.push_back(_tmp_418);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000395") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].connection_id " << tools::green("present");
                                    }
                                    if(*(buffer++)) { 
                                        its_container_v3_etsi_its_cdd_msgs::msg::LongitudinalLanePosition _tmp_419;
                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].longitudinal_lane_position.push_back(_tmp_419);
                                    
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000396") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].longitudinal_lane_position " << tools::green("present");
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference.size() != 0) {
                                        // Field name: map_reference
                                        // Choice
                                           // #0  roadsegment   RoadSegmentReferenceId   
                                           // #1  intersection   IntersectionReferenceId   
                                        uint8_t _choice_10 = *(buffer++);
                                        
                                        if(_choice_10 == 0) {
                                            its_container_v3_etsi_its_cdd_msgs::msg::RoadSegmentReferenceId _tmp_420;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].roadsegment.push_back(_tmp_420);
                                        
                                                // RoadSegmentReferenceId  SEQUENCE
                                                    //  region     Identifier2B   OPTIONAL  
                                                    //  id         Identifier2B     
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::msg::Identifier2B _tmp_421;
                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].roadsegment[0].region.push_back(_tmp_421);
                                                
                                                    if(debug)
                                                        logger->print() << "|" << tools::brown("000397") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].roadsegment[0].region " << tools::green("present");
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].roadsegment[0].region.size() != 0) {
                                                    // Field name: region
                                                    // Integer
                                                    // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                    uint16_t* _tmp_422 = (uint16_t*) buffer; buffer += 2;
                                                    __aux64__ = *_tmp_422;
                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].roadsegment[0].region[0].value = __aux64__;
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000398") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].roadsegment[0].region[0].value) << 
                                                                     " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].roadsegment[0].region[0].value: " << ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].roadsegment[0].region[0].value;
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].roadsegment[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                        return false;
                                                    }
                                                }
                                                
                                                // Field name: id
                                                // Integer
                                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                uint16_t* _tmp_423 = (uint16_t*) buffer; buffer += 2;
                                                __aux64__ = *_tmp_423;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].roadsegment[0].id.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000399") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].roadsegment[0].id.value) << 
                                                                 " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].roadsegment[0].id.value: " << ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].roadsegment[0].id.value;
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].roadsegment[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                    return false;
                                                }
                                        }
                                        else if(_choice_10 == 1)  // CHOICE MapReference  fieldName(intersection)
                                        {
                                            its_container_v3_etsi_its_cdd_msgs::msg::IntersectionReferenceId _tmp_424;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].intersection.push_back(_tmp_424);
                                        
                                                // IntersectionReferenceId  SEQUENCE
                                                    //  region     Identifier2B   OPTIONAL  
                                                    //  id         Identifier2B     
                                                if(*(buffer++)) { 
                                                    its_container_v3_etsi_its_cdd_msgs::msg::Identifier2B _tmp_425;
                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].intersection[0].region.push_back(_tmp_425);
                                                
                                                    if(debug)
                                                        logger->print() << "|" << tools::brown("000400") << "| ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].intersection[0].region " << tools::green("present");
                                                }
                                                
                                                if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].intersection[0].region.size() != 0) {
                                                    // Field name: region
                                                    // Integer
                                                    // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                    uint16_t* _tmp_426 = (uint16_t*) buffer; buffer += 2;
                                                    __aux64__ = *_tmp_426;
                                                    ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].intersection[0].region[0].value = __aux64__;
                                                    
                                                    if(debug) {
                                                        logger->print() << "|" << tools::brown("000401") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].intersection[0].region[0].value) << 
                                                                     " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].intersection[0].region[0].value: " << ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].intersection[0].region[0].value;
                                                    }
                                                    
                                                    // ******************* MIN validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                        return false;
                                                    }
                                                    // ******************* MAX validator *******************
                                                    if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                        logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].intersection[0].region[0].value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                        return false;
                                                    }
                                                }
                                                
                                                // Field name: id
                                                // Integer
                                                // UINT16  min(0) max(65535) span(65536) datatype(UInt16)
                                                uint16_t* _tmp_427 = (uint16_t*) buffer; buffer += 2;
                                                __aux64__ = *_tmp_427;
                                                ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].intersection[0].id.value = __aux64__;
                                                
                                                if(debug) {
                                                    logger->print() << "|" << tools::brown("000402") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].intersection[0].id.value) << 
                                                                 " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].intersection[0].id.value: " << ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].intersection[0].id.value;
                                                }
                                                
                                                // ******************* MIN validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].intersection[0].id.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                    return false;
                                                }
                                                // ******************* MAX validator *******************
                                                if(VALIDATORS_ENABLED && __aux64__ > 65535) {
                                                    logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0].intersection[0].id.value' " << (__aux64__) << " exceeds max allowable (65535); message dropped.";
                                                    return false;
                                                }
                                        }
                                        else
                                        {
                                            logger->warning() << "Wrong option (" << static_cast<int>(_choice_10) << ") selected in CHOICE MapReference in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].map_reference[0]'; message dropped.";
                                            return false;
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].lane_id.size() != 0) {
                                        // Field name: lane_id
                                        // Integer
                                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                        uint8_t* _tmp_428 = (uint8_t*) buffer++;
                                        __aux64__ = *_tmp_428;
                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].lane_id[0].value = __aux64__;
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000403") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].lane_id[0].value) << 
                                                         " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].lane_id[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].lane_id[0].value);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].lane_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].lane_id[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                            return false;
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].connection_id.size() != 0) {
                                        // Field name: connection_id
                                        // Integer
                                        // UINT8  min(0) max(255) span(256) datatype(UInt8)
                                        uint8_t* _tmp_429 = (uint8_t*) buffer++;
                                        __aux64__ = *_tmp_429;
                                        ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].connection_id[0].value = __aux64__;
                                        
                                        if(debug) {
                                            logger->print() << "|" << tools::brown("000404") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].connection_id[0].value) << 
                                                         " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].connection_id[0].value: " << static_cast<int>(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].connection_id[0].value);
                                        }
                                        
                                        // ******************* MIN validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].connection_id[0].value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                            return false;
                                        }
                                        // ******************* MAX validator *******************
                                        if(VALIDATORS_ENABLED && __aux64__ > 255) {
                                            logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].connection_id[0].value' " << (__aux64__) << " exceeds max allowable (255); message dropped.";
                                            return false;
                                        }
                                    }
                                    
                                    if(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].longitudinal_lane_position.size() != 0) {
                                        // Field name: longitudinal_lane_position
                                            // LongitudinalLanePosition  SEQUENCE
                                                //  longitudinalLanePositionValue      LongitudinalLanePositionValue          
                                                //  longitudinalLanePositionConfidence LongitudinalLanePositionConfidence     
                                            
                                            // Field name: longitudinal_lane_position_value
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(32767) span(32768) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_430 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value = *_tmp_430;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 32767) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value' " << (__aux64__) << " exceeds max allowable (32767); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000405") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value: " <<
                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_value.value << " (" << __aux64__ << ")";
                                            }
                                            
                                            // Field name: longitudinal_lane_position_confidence
                                            // Real
                                            // Float
                                            // FLOAT  min(0) max(1023) span(1024) scaleDivisor(10.0) dataType(Float)
                                            uint16_t* _tmp_431 = (uint16_t*) buffer; buffer += 2;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value = *_tmp_431;
                                            __aux64__ = ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value;
                                            ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value /= 10.0;
                                            
                                            // ******************* MIN validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ < 0) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' " << (__aux64__) << " is less than allowable (0); message dropped.";
                                                return false;
                                            }
                                            // ******************* MAX validator *******************
                                            if(VALIDATORS_ENABLED && __aux64__ > 1023) {
                                                logger->error() << "Error: Value in 'payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value' " << (__aux64__) << " exceeds max allowable (1023); message dropped.";
                                                return false;
                                            }
                                            
                                            if(debug) {
                                                logger->print() << "|" << tools::brown("000406") << "| " << tools::getTypeName(ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value) << " payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence: " <<
                                                             ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].longitudinal_lane_position[0].longitudinal_lane_position_confidence.value << " (" << __aux64__ << ")";
                                            }
                                    }
                                    if(*_ext_flag_231) { // from ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0]. 
                                        uint8_t* _tmp_432 = (uint8_t*) buffer++;  // number of extensions
                                        bool _array_8[*_tmp_432];
                                        
                                        if(debug)
                                            logger->print() << "|" << tools::brown("000407") << "| Reading number of exts from ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].map_position[0].: " << static_cast<unsigned int>(*_tmp_432);
                                        
                                        // Extensions bytemap
                                        for(int i = 0; i < *_tmp_432; i++)
                                            _array_8[i] = (*buffer++) != 0;
                                        
                                        // Discarding unknown OpenType containers
                                        for(int i = 0; i < *_tmp_432; i++) {
                                            uint16_t* _tmp_433 = (uint16_t*)buffer;  // OpenType length
                                            buffer += 2;
                                        
                                            if(debug) {
                                            }
                                        
                                            for(int i = 0; i < *_tmp_433; i++)
                                                buffer++;
                                        }
                                        
                                    }
                            }
                            if(*_ext_flag_128) { // from ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k]. 
                                uint8_t* _tmp_434 = (uint8_t*) buffer++;  // number of extensions
                                bool _array_9[*_tmp_434];
                                
                                if(debug)
                                    logger->print() << "|" << tools::brown("000408") << "| Reading number of exts from ros->payload.cpm_containers.elements[a].perceived_object_container[0].perceived_objects.elements[k].: " << static_cast<unsigned int>(*_tmp_434);
                                
                                // Extensions bytemap
                                for(int i = 0; i < *_tmp_434; i++)
                                    _array_9[i] = (*buffer++) != 0;
                                
                                // Discarding unknown OpenType containers
                                for(int i = 0; i < *_tmp_434; i++) {
                                    uint16_t* _tmp_435 = (uint16_t*)buffer;  // OpenType length
                                    buffer += 2;
                                
                                    if(debug) {
                                    }
                                
                                    for(int i = 0; i < *_tmp_435; i++)
                                        buffer++;
                                }
                                
                            }
                    }
                    if(*_ext_flag_126) { // from ros->payload.cpm_containers.elements[a].perceived_object_container[0]. 
                        uint8_t* _tmp_436 = (uint8_t*) buffer++;  // number of extensions
                        bool _array_10[*_tmp_436];
                        
                        if(debug)
                            logger->print() << "|" << tools::brown("000409") << "| Reading number of exts from ros->payload.cpm_containers.elements[a].perceived_object_container[0].: " << static_cast<unsigned int>(*_tmp_436);
                        
                        // Extensions bytemap
                        for(int i = 0; i < *_tmp_436; i++)
                            _array_10[i] = (*buffer++) != 0;
                        
                        // Discarding unknown OpenType containers
                        for(int i = 0; i < *_tmp_436; i++) {
                            uint16_t* _tmp_437 = (uint16_t*)buffer;  // OpenType length
                            buffer += 2;
                        
                            if(debug) {
                            }
                        
                            for(int i = 0; i < *_tmp_437; i++)
                                buffer++;
                        }
                        
                    }
            }
            else
            {
                logger->warning() << "Wrong option (" << static_cast<int>(_choice_1) << ") selected in CHOICE WrappedCpmContainer in 'payload.cpm_containers.elements[a]'; message dropped.";
                return false;
            }
        }
        if(*_ext_flag_1) { // from ros->payload. 
            uint8_t* _tmp_438 = (uint8_t*) buffer++;  // number of extensions
            bool _array_11[*_tmp_438];
            
            if(debug)
                logger->print() << "|" << tools::brown("000410") << "| Reading number of exts from ros->payload.: " << static_cast<unsigned int>(*_tmp_438);
            
            // Extensions bytemap
            for(int i = 0; i < *_tmp_438; i++)
                _array_11[i] = (*buffer++) != 0;
            
            // Discarding unknown OpenType containers
            for(int i = 0; i < *_tmp_438; i++) {
                uint16_t* _tmp_439 = (uint16_t*)buffer;  // OpenType length
                buffer += 2;
            
                if(debug) {
                }
            
                for(int i = 0; i < *_tmp_439; i++)
                    buffer++;
            }
            
        }
	
	        return true;
        }
    }
}